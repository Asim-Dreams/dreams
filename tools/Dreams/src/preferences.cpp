/*
 * Copyright (C) 2004-2006 Intel Corporation
 * 
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 * 
 */

/****************************************************************************
** Form implementation generated from reading ui file 'preferences.ui'
**
** Created: Tue Nov 29 12:16:59 2005
**      by: The User Interface Compiler ($Id: preferences.cpp 341 2006-10-31 12:19:54Z cjbeckma $)
**
** WARNING! All changes made in this file will be lost!
****************************************************************************/

#include "preferences.h"

#include <qvariant.h>
#include <qpushbutton.h>
#include <qtabwidget.h>
#include <qwidget.h>
#include <qlabel.h>
#include <qframe.h>
#include <qlineedit.h>
#include <qtoolbutton.h>
#include <qcheckbox.h>
#include <qlistbox.h>
#include <qcombobox.h>
#include <qspinbox.h>
#include <qslider.h>
#include <qlayout.h>
#include <qtooltip.h>
#include <qwhatsthis.h>
#include <qimage.h>
#include <qpixmap.h>

static const unsigned char image0_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x20,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x73, 0x7a, 0x7a, 0xf4, 0x00, 0x00, 0x06,
    0x74, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0xc5, 0x97, 0x51, 0x68, 0x1b,
    0xc9, 0x1d, 0xc6, 0x7f, 0x32, 0x0a, 0x99, 0x05, 0x99, 0xae, 0x0e, 0x1f,
    0xac, 0xc0, 0x06, 0x6f, 0x49, 0x21, 0x32, 0x09, 0xd8, 0xba, 0xbe, 0x48,
    0xb9, 0x83, 0x46, 0x07, 0x25, 0x91, 0x69, 0xc1, 0xd6, 0xb9, 0x10, 0x5f,
    0x1b, 0xa8, 0x75, 0x71, 0x09, 0x72, 0x0b, 0xad, 0x9d, 0x94, 0x26, 0xce,
    0x43, 0x1a, 0x3b, 0x47, 0x5c, 0x25, 0xa5, 0xc1, 0x6e, 0x21, 0x17, 0x37,
    0x90, 0x38, 0x7a, 0x68, 0x90, 0x0a, 0x4d, 0xcf, 0x79, 0xb8, 0x43, 0x79,
    0xb8, 0x43, 0xea, 0x43, 0xb1, 0x02, 0x09, 0x5e, 0x83, 0x8f, 0xae, 0xe0,
    0x4c, 0x56, 0x10, 0x11, 0x6d, 0xb1, 0x60, 0xb7, 0x54, 0xb0, 0x7d, 0x18,
    0xd9, 0x8e, 0xe3, 0xde, 0x9d, 0x5d, 0xda, 0xe6, 0xff, 0x32, 0xd2, 0xcc,
    0xce, 0x7c, 0xdf, 0x7c, 0xf3, 0xfd, 0xff, 0x3b, 0xeb, 0x2b, 0x16, 0x8b,
    0xbc, 0xca, 0x68, 0x7b, 0xa5, 0xe8, 0x80, 0xff, 0x3f, 0x9d, 0xb8, 0xf0,
    0xb8, 0xd7, 0x33, 0xd6, 0x14, 0x4c, 0xdb, 0x21, 0x7b, 0xe2, 0x91, 0xef,
    0xff, 0x4a, 0x20, 0xf3, 0x91, 0xe6, 0xe1, 0xb7, 0x99, 0x3e, 0xfe, 0xc8,
    0x17, 0xfb, 0xd9, 0x7e, 0x2f, 0xf1, 0x79, 0xaf, 0xa7, 0x06, 0x0d, 0xb2,
    0xa7, 0xfe, 0xb1, 0x67, 0x22, 0xbe, 0xbd, 0x7a, 0x60, 0xf6, 0x23, 0xcd,
    0x13, 0xaa, 0x4e, 0xf6, 0xfe, 0x32, 0x2e, 0x2e, 0xc5, 0x5f, 0x4a, 0xd0,
    0xf8, 0xe8, 0x41, 0x4f, 0x0d, 0x0b, 0xf4, 0x40, 0x89, 0xab, 0xa7, 0x94,
    0x5d, 0x13, 0xd9, 0x13, 0x81, 0xf4, 0x07, 0xcf, 0xbd, 0xe8, 0x9b, 0x31,
    0xb2, 0x7f, 0xb4, 0xd0, 0xc3, 0x21, 0x42, 0x6a, 0x90, 0xe5, 0xcf, 0x2c,
    0xaa, 0x06, 0x14, 0xae, 0x55, 0x24, 0x91, 0x9f, 0x68, 0x9e, 0x16, 0x56,
    0xc9, 0x9e, 0x5e, 0xd9, 0x15, 0x89, 0x3d, 0x11, 0xc8, 0x99, 0x51, 0x2f,
    0xf7, 0xf1, 0x32, 0xc1, 0x8e, 0x1e, 0xa2, 0x87, 0xa0, 0x52, 0x03, 0x4d,
    0x80, 0xb9, 0x06, 0xac, 0x41, 0xb9, 0x6c, 0xb1, 0x78, 0xa3, 0xe2, 0x8b,
    0x7d, 0x6f, 0xbf, 0xa7, 0xf5, 0x46, 0x10, 0xc1, 0x25, 0xb2, 0xa7, 0xbf,
    0xfc, 0x58, 0x76, 0x4d, 0xe0, 0xc3, 0xb5, 0x5e, 0xaf, 0xf0, 0xd0, 0xc4,
    0x0d, 0x04, 0x09, 0x1f, 0x08, 0x61, 0xbb, 0x40, 0x13, 0x9c, 0x86, 0x6c,
    0x69, 0x02, 0x2e, 0x54, 0xd7, 0xea, 0x58, 0xa6, 0xcb, 0xe2, 0xf5, 0x8a,
    0x2f, 0x3e, 0x72, 0xd0, 0x53, 0xfb, 0x5c, 0xc4, 0x7a, 0x81, 0xec, 0xb9,
    0xaf, 0xff, 0x5b, 0x22, 0xbb, 0x22, 0x90, 0x5b, 0x8b, 0x7a, 0xf5, 0x55,
    0x13, 0xa3, 0xa1, 0x11, 0x3b, 0xa4, 0x60, 0xda, 0xa0, 0xfa, 0xa1, 0xda,
    0x6a, 0xad, 0x9a, 0x7c, 0xce, 0x6d, 0x40, 0x48, 0x05, 0xab, 0x21, 0x7f,
    0x9b, 0xe5, 0x3a, 0x76, 0xd5, 0x45, 0xed, 0x54, 0x51, 0x0f, 0xdb, 0x64,
    0x7f, 0x58, 0xd9, 0x41, 0xe2, 0x2b, 0xeb, 0xc0, 0x82, 0xd9, 0xeb, 0x39,
    0x96, 0x89, 0xd1, 0x84, 0xf0, 0x21, 0x05, 0xcb, 0x95, 0xfd, 0xd5, 0x56,
    0x6b, 0x35, 0x5a, 0xe0, 0x1b, 0xff, 0x6b, 0x52, 0x09, 0xfc, 0x10, 0x8e,
    0x06, 0x09, 0xbf, 0xa5, 0xe2, 0x36, 0x5c, 0x92, 0x07, 0x04, 0x5e, 0x67,
    0xd4, 0x4b, 0xdf, 0x7a, 0xea, 0xed, 0x9a, 0xc0, 0xcd, 0xc7, 0xbd, 0x9e,
    0xbe, 0xcf, 0xa6, 0xe2, 0xaa, 0x24, 0xfa, 0x74, 0xc4, 0x3e, 0x08, 0x09,
    0x39, 0xa6, 0xb5, 0xda, 0x90, 0x00, 0x9a, 0x5b, 0xfd, 0xa8, 0xe0, 0x36,
    0x41, 0x15, 0x52, 0x05, 0x27, 0xa0, 0x90, 0xfe, 0x71, 0x90, 0xcc, 0xd9,
    0x20, 0xb1, 0x2e, 0x58, 0xba, 0x91, 0xe4, 0xc3, 0xb5, 0xe8, 0x26, 0x89,
    0x2f, 0x24, 0x30, 0x5b, 0xd2, 0xbc, 0xc4, 0x61, 0x85, 0xb2, 0xe5, 0x12,
    0x3e, 0x1c, 0xc4, 0x05, 0xf8, 0xe7, 0xd6, 0x8e, 0xab, 0x8d, 0xed, 0x0a,
    0x58, 0x2e, 0x08, 0x01, 0x76, 0xc5, 0xc4, 0x7c, 0x10, 0xa7, 0xfc, 0x60,
    0x82, 0x7a, 0x13, 0x62, 0xdd, 0x90, 0x19, 0xdd, 0xbe, 0xf6, 0xd4, 0x10,
    0x38, 0x9a, 0x24, 0xb1, 0xc3, 0x03, 0x4b, 0x76, 0xd4, 0xeb, 0x3e, 0x00,
    0x0a, 0xe0, 0x34, 0xc1, 0x6e, 0xb4, 0x40, 0x9a, 0x60, 0x3e, 0x6b, 0x81,
    0x6f, 0x78, 0xa0, 0xb6, 0xe5, 0x81, 0x50, 0x00, 0xca, 0x2b, 0x75, 0xd4,
    0x52, 0x3f, 0x37, 0x2f, 0xe8, 0x94, 0x9e, 0x18, 0x4c, 0x3e, 0xe8, 0xc3,
    0x5a, 0x9a, 0x97, 0x8b, 0xbd, 0x14, 0xcb, 0x26, 0xbc, 0x7d, 0x72, 0x62,
    0xbb, 0x02, 0x0b, 0xab, 0x51, 0x6f, 0xf0, 0x4d, 0xd0, 0x03, 0x60, 0xd9,
    0xd0, 0xa3, 0x49, 0x39, 0x83, 0x62, 0x6b, 0xc7, 0xf6, 0x8b, 0x0a, 0xf8,
    0x25, 0x39, 0x45, 0x40, 0x79, 0xc5, 0xc4, 0xf9, 0x24, 0xc2, 0xec, 0x4c,
    0x98, 0x9e, 0x91, 0xbb, 0xa4, 0xae, 0xe4, 0x48, 0xbf, 0x55, 0x20, 0x95,
    0x7e, 0x77, 0x07, 0xb8, 0x69, 0xc2, 0x7b, 0xbf, 0x2e, 0x90, 0x9f, 0x49,
    0xfa, 0x36, 0x09, 0x2c, 0x3c, 0xee, 0xf5, 0x32, 0x03, 0x10, 0x6a, 0x07,
    0xdb, 0x05, 0xe1, 0x97, 0x29, 0xa6, 0x0a, 0x09, 0xa2, 0x89, 0xad, 0xb3,
    0x05, 0xd0, 0x02, 0x52, 0x95, 0x90, 0x0a, 0x56, 0xa5, 0x8e, 0x53, 0x8a,
    0x53, 0xb8, 0x12, 0x23, 0x32, 0x34, 0x2f, 0x1f, 0xd8, 0xa7, 0x33, 0xf9,
    0x9b, 0x02, 0x61, 0x7f, 0x91, 0xd4, 0x48, 0x6a, 0x13, 0xbc, 0xfe, 0x0c,
    0xc6, 0x6e, 0x2d, 0x73, 0xf5, 0x84, 0xac, 0x96, 0x6d, 0x00, 0x53, 0x0f,
    0xbe, 0xe6, 0x4d, 0x9c, 0x50, 0x50, 0xda, 0xc1, 0x5a, 0x07, 0xb3, 0x2a,
    0xc1, 0xec, 0xd6, 0x4e, 0x45, 0x4b, 0x01, 0xc1, 0x96, 0xfb, 0x37, 0xfa,
    0x8d, 0x15, 0x93, 0xfa, 0xc3, 0x08, 0xb9, 0x8b, 0x11, 0xf4, 0xe1, 0x59,
    0x1c, 0xab, 0x48, 0xee, 0xda, 0x24, 0xb9, 0xdb, 0x19, 0x50, 0x54, 0x26,
    0xae, 0xcc, 0x12, 0x72, 0x17, 0x49, 0x8d, 0xa6, 0x70, 0xd6, 0x61, 0xec,
    0x8e, 0xc9, 0xe4, 0xf1, 0xbf, 0x6f, 0xa6, 0x63, 0x1b, 0xc0, 0xc8, 0x50,
    0x0f, 0x7a, 0x3b, 0xd2, 0x64, 0x35, 0x30, 0x6b, 0x10, 0x3b, 0x20, 0x8f,
    0x41, 0x0b, 0x48, 0x37, 0xab, 0x01, 0x99, 0x5d, 0x5a, 0xcb, 0xf5, 0xaa,
    0x90, 0x44, 0xcd, 0xfb, 0x63, 0x64, 0x4e, 0x29, 0x44, 0x4e, 0x5e, 0x02,
    0xc7, 0xc0, 0xf8, 0x4b, 0x99, 0x77, 0xc6, 0xa7, 0xf9, 0xfe, 0x8f, 0x2e,
    0x80, 0x51, 0x80, 0x60, 0x0f, 0x53, 0x57, 0xa6, 0x08, 0x1a, 0x59, 0xde,
    0x18, 0x9e, 0x62, 0x2c, 0x5a, 0xdd, 0x56, 0x0b, 0xda, 0x00, 0x16, 0x3f,
    0x71, 0x00, 0x09, 0xb8, 0xf8, 0x04, 0xd2, 0xdf, 0x92, 0xb2, 0x87, 0x84,
    0x3c, 0xf3, 0x90, 0x00, 0xbb, 0x2e, 0x81, 0xab, 0x35, 0xa9, 0x8e, 0x51,
    0x71, 0x30, 0xef, 0x25, 0xc9, 0xfc, 0x60, 0x99, 0xe4, 0x99, 0x5f, 0x81,
    0x65, 0x80, 0x02, 0xe5, 0xd5, 0x25, 0xb9, 0x72, 0xd3, 0xc5, 0xc1, 0x85,
    0x67, 0x4b, 0xd0, 0x11, 0xe6, 0xd2, 0x6f, 0xc7, 0x09, 0xd7, 0xa6, 0x77,
    0xf8, 0xa1, 0x0d, 0xe0, 0xbd, 0xbe, 0x47, 0xbe, 0xa2, 0x09, 0xf9, 0xbf,
    0xc2, 0xf8, 0x31, 0x79, 0xfe, 0x21, 0x3f, 0xd4, 0x5f, 0xf4, 0x80, 0x22,
    0x09, 0x68, 0xaa, 0xf4, 0x86, 0x75, 0x7f, 0x8c, 0xcc, 0x50, 0x91, 0xd4,
    0x85, 0x49, 0xb0, 0x2b, 0x20, 0x5c, 0x58, 0x37, 0xd0, 0x02, 0xd2, 0x24,
    0x42, 0x08, 0x68, 0x98, 0xb2, 0xbf, 0x56, 0x46, 0xe9, 0xee, 0x23, 0x77,
    0x63, 0x84, 0x85, 0x73, 0xf1, 0x9d, 0x85, 0x28, 0x7d, 0xcb, 0xf3, 0x84,
    0x1f, 0xba, 0x3b, 0x20, 0xfb, 0xa9, 0x54, 0xa3, 0xde, 0x94, 0xee, 0xae,
    0x36, 0x00, 0x01, 0xd5, 0x75, 0x39, 0xa1, 0x52, 0x75, 0x30, 0xee, 0x25,
    0x99, 0x1a, 0xc8, 0x93, 0xfa, 0xc5, 0x38, 0xd8, 0x26, 0xf8, 0x2d, 0x68,
    0x18, 0x20, 0x5c, 0xaa, 0x8d, 0x0a, 0x00, 0x6e, 0xd3, 0x95, 0xa6, 0x69,
    0x18, 0x20, 0x2c, 0xa8, 0x95, 0xa1, 0xb3, 0x87, 0xcc, 0xf5, 0x41, 0x66,
    0xcf, 0x25, 0xb6, 0x0a, 0xd1, 0xf8, 0x9d, 0xfd, 0x5e, 0xee, 0x62, 0x8c,
    0x48, 0x17, 0xf4, 0xf7, 0x42, 0x58, 0x53, 0xb8, 0xfa, 0x67, 0xa0, 0x95,
    0x09, 0x9a, 0x00, 0x1a, 0xa0, 0xb6, 0x03, 0x7e, 0x58, 0x7e, 0x98, 0x65,
    0x3c, 0x9a, 0x27, 0x75, 0x66, 0x50, 0x82, 0x0b, 0xc0, 0xb5, 0x20, 0x00,
    0x34, 0x97, 0x37, 0x15, 0x00, 0x01, 0xae, 0x01, 0xea, 0x0b, 0xe3, 0xb5,
    0x65, 0x14, 0x2d, 0xcc, 0xdd, 0x6b, 0x61, 0xc6, 0x47, 0x63, 0x1e, 0x80,
    0xdf, 0xae, 0x19, 0x14, 0x57, 0x22, 0x88, 0x80, 0x4c, 0xc1, 0x70, 0x37,
    0x84, 0x3a, 0xe0, 0xee, 0xa7, 0x0e, 0x7a, 0x40, 0x41, 0xed, 0x00, 0xbd,
    0x03, 0x0a, 0xab, 0xd2, 0x84, 0x4a, 0x50, 0xa5, 0x6c, 0x82, 0xb3, 0xf2,
    0x7b, 0x94, 0xce, 0x6e, 0x68, 0x84, 0x40, 0x0d, 0x41, 0xd3, 0x06, 0x45,
    0x60, 0x63, 0x01, 0x2a, 0xf8, 0x41, 0x51, 0x6d, 0x49, 0x22, 0x00, 0xd8,
    0x55, 0x10, 0x0e, 0xd4, 0x16, 0xb1, 0x8c, 0x2a, 0x66, 0xeb, 0x05, 0xb6,
    0x59, 0x09, 0xcf, 0xff, 0xee, 0xb9, 0x97, 0x18, 0xe8, 0x27, 0x75, 0x0c,
    0x82, 0x40, 0x1d, 0xe9, 0x89, 0x7a, 0x4d, 0xe6, 0xba, 0x10, 0x90, 0x2f,
    0xcb, 0x49, 0x8b, 0x77, 0x32, 0x0c, 0x8a, 0x33, 0xcc, 0x5f, 0x07, 0x34,
    0xc0, 0x15, 0xd0, 0xa1, 0xc9, 0xc1, 0x86, 0xc2, 0xe4, 0xfb, 0x0e, 0x7d,
    0x07, 0x21, 0x79, 0x42, 0x91, 0x97, 0x3e, 0xbb, 0x2e, 0x25, 0x75, 0x6d,
    0xac, 0x27, 0x10, 0x19, 0x81, 0xfc, 0x9f, 0x8a, 0x5b, 0x75, 0x00, 0x60,
    0xfa, 0xf4, 0x6b, 0xbe, 0x23, 0x5a, 0xc9, 0x77, 0x64, 0x78, 0x8e, 0xa9,
    0x8f, 0x65, 0x2a, 0x0e, 0x7e, 0x13, 0xc2, 0x07, 0xc1, 0xb0, 0xc0, 0x30,
    0xeb, 0x0c, 0xf7, 0x01, 0x4d, 0x07, 0x3d, 0x9a, 0xc6, 0x10, 0xe7, 0x79,
    0xf7, 0x6c, 0xeb, 0x3e, 0xd0, 0xe5, 0x42, 0xb3, 0x02, 0x4a, 0x05, 0xb3,
    0x66, 0x60, 0x98, 0x15, 0xca, 0x95, 0x0a, 0xb4, 0x1b, 0x80, 0x01, 0x6a,
    0x15, 0x84, 0x8d, 0xf9, 0xd9, 0x76, 0xf0, 0x6d, 0x0a, 0xbc, 0x1c, 0xa9,
    0x99, 0xe7, 0xde, 0xe0, 0x50, 0x3f, 0xc3, 0x47, 0xa5, 0xfb, 0xcb, 0x15,
    0x28, 0x1a, 0x10, 0xeb, 0x02, 0xfc, 0x0e, 0xf1, 0x6e, 0x97, 0xc9, 0xf7,
    0xa7, 0xc1, 0x9a, 0x63, 0xfe, 0xb6, 0x0b, 0xaf, 0x0b, 0x40, 0x30, 0x37,
    0x03, 0x63, 0x3f, 0xb7, 0x01, 0x78, 0xfe, 0x37, 0x41, 0x50, 0x07, 0x70,
    0xb1, 0x4a, 0x10, 0xf9, 0xee, 0x76, 0xf0, 0x6d, 0x0a, 0xbc, 0x1c, 0xf3,
    0x67, 0x5f, 0xf3, 0xf5, 0xeb, 0x25, 0xdf, 0x3b, 0xa3, 0xf3, 0x2c, 0x3e,
    0x04, 0xb5, 0x03, 0x92, 0x47, 0xa1, 0x60, 0x39, 0x58, 0x9f, 0x2b, 0x58,
    0xae, 0x4b, 0xe6, 0xe2, 0x79, 0x78, 0x3d, 0x4d, 0xf2, 0x24, 0x38, 0xeb,
    0x00, 0x3a, 0x47, 0x8f, 0xeb, 0x24, 0x8e, 0x75, 0x33, 0xfe, 0xd3, 0x6e,
    0x82, 0xba, 0x0e, 0x08, 0xac, 0x32, 0x44, 0x06, 0x77, 0x82, 0x7f, 0xa9,
    0x02, 0x2f, 0xc7, 0xf8, 0xe5, 0xa7, 0x5e, 0x7c, 0x20, 0x49, 0xe2, 0x28,
    0x14, 0x56, 0xc0, 0x5a, 0x85, 0x78, 0x18, 0x12, 0xbd, 0x0e, 0x13, 0x97,
    0xa6, 0x51, 0x1a, 0x73, 0x64, 0xe6, 0x42, 0xa0, 0x0c, 0x22, 0x1d, 0x14,
    0x04, 0x8a, 0x58, 0x46, 0x99, 0xc8, 0xb7, 0x6d, 0xf2, 0x7f, 0xd8, 0x09,
    0xbe, 0x27, 0x02, 0x1b, 0x91, 0xba, 0xbc, 0xe4, 0x0d, 0x0e, 0xa5, 0xd1,
    0xbf, 0x01, 0xc5, 0x32, 0xc4, 0xba, 0xea, 0xf4, 0x75, 0x06, 0x79, 0x23,
    0x1e, 0x67, 0xe4, 0x3b, 0x25, 0xe6, 0xe7, 0xe3, 0xb0, 0x6f, 0x04, 0x28,
    0x61, 0xad, 0xe6, 0x88, 0x25, 0xaa, 0x64, 0x6f, 0x17, 0xbe, 0xf0, 0x62,
    0xba, 0x67, 0x02, 0x1b, 0x91, 0xbe, 0xfc, 0xd4, 0x4b, 0x0c, 0x24, 0xa9,
    0xdb, 0x90, 0xbf, 0x97, 0x21, 0x7f, 0xed, 0x88, 0x2f, 0x16, 0x8b, 0x7b,
    0x97, 0xce, 0x68, 0x4c, 0x4e, 0xf7, 0x50, 0xaf, 0x5a, 0xbc, 0x9d, 0x30,
    0x99, 0xbb, 0xb1, 0xf8, 0xdf, 0xb9, 0x15, 0xef, 0x25, 0x6e, 0x7e, 0x30,
    0xec, 0x19, 0xab, 0x2e, 0x57, 0x67, 0xf2, 0x5f, 0xf9, 0x6d, 0xf0, 0x3f,
    0x21, 0xb0, 0x97, 0x78, 0xe5, 0x5f, 0xc7, 0xff, 0x02, 0xd8, 0x6d, 0xf1,
    0x6c, 0xa4, 0x32, 0xb8, 0xdd, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e,
    0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image1_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x1f, 0xf3, 0xff, 0x61, 0x00, 0x00, 0x02,
    0x2a, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0xa5, 0x92, 0x31, 0x6b, 0x14,
    0x51, 0x14, 0x85, 0xbf, 0x0d, 0x23, 0xbc, 0x07, 0x11, 0x67, 0xc4, 0x62,
    0x57, 0x14, 0xb2, 0x42, 0x20, 0x1b, 0x10, 0xb2, 0x60, 0xe1, 0x6e, 0xa5,
    0xf9, 0x09, 0x81, 0x14, 0x16, 0x69, 0xc4, 0x26, 0xa4, 0x12, 0xdb, 0x68,
    0x97, 0x4e, 0xb0, 0xb1, 0x52, 0xd0, 0xc6, 0x4e, 0x8c, 0xa0, 0x10, 0x2b,
    0x63, 0x11, 0x5d, 0x0b, 0x25, 0x5b, 0x24, 0x66, 0x02, 0x09, 0xcc, 0x82,
    0x43, 0xde, 0x16, 0x0b, 0xf3, 0x20, 0x03, 0xef, 0x06, 0x1f, 0x8c, 0xc5,
    0x0c, 0x59, 0x82, 0x8d, 0xe8, 0x2d, 0x0f, 0xe7, 0x1e, 0xce, 0xb9, 0xe7,
    0xd6, 0x7a, 0xbd, 0x1e, 0xff, 0x33, 0x13, 0x7f, 0x43, 0x7a, 0xf5, 0xb6,
    0x28, 0xde, 0xbc, 0x2f, 0x8a, 0x7f, 0x12, 0xf8, 0xb2, 0x75, 0xa1, 0x58,
    0x59, 0x6a, 0xf3, 0x60, 0xb9, 0xcb, 0xd3, 0x97, 0xee, 0x0f, 0x91, 0xda,
    0xd4, 0xd2, 0x8f, 0xa2, 0x3b, 0xd7, 0xc0, 0x0a, 0x28, 0x60, 0x73, 0x2b,
    0x61, 0xe3, 0xd1, 0x49, 0x0d, 0xe0, 0x28, 0x9d, 0x2a, 0xe6, 0x6f, 0x35,
    0x50, 0x0a, 0x44, 0x60, 0xe3, 0x83, 0xe1, 0xda, 0xf4, 0xa0, 0x76, 0x46,
    0x60, 0x61, 0xed, 0xa8, 0x58, 0x59, 0x6e, 0x90, 0xe5, 0x60, 0x05, 0x92,
    0x5d, 0x87, 0xec, 0x24, 0xdc, 0x5d, 0x6c, 0x32, 0xdb, 0xd2, 0xe0, 0x20,
    0xb3, 0x25, 0x59, 0x04, 0x56, 0x9f, 0x6c, 0x73, 0xef, 0xce, 0xc9, 0xa9,
    0x48, 0x00, 0x10, 0x46, 0x90, 0x09, 0x90, 0x3a, 0x5a, 0x7e, 0xc8, 0xc2,
    0xfd, 0x59, 0xf4, 0x79, 0xe0, 0x57, 0x85, 0x07, 0xe5, 0xb2, 0xc9, 0x1d,
    0xad, 0x99, 0x08, 0x18, 0x72, 0x46, 0x00, 0xc0, 0xee, 0x66, 0xb4, 0x26,
    0x85, 0xee, 0x62, 0x73, 0xec, 0xef, 0x1c, 0x44, 0x93, 0x80, 0x87, 0xd5,
    0xd7, 0x86, 0xfe, 0xa1, 0x50, 0xaf, 0x87, 0xac, 0x3f, 0x77, 0x85, 0x88,
    0x26, 0xee, 0x27, 0x04, 0xe2, 0x2b, 0x7b, 0x81, 0x62, 0xfd, 0x9b, 0xd0,
    0x1f, 0x39, 0xf0, 0x82, 0xf3, 0xa5, 0x03, 0xf1, 0x42, 0x7c, 0x28, 0x24,
    0x23, 0x68, 0xce, 0x35, 0x49, 0x04, 0xa2, 0x9b, 0x11, 0x7b, 0x9f, 0x33,
    0x90, 0xca, 0x81, 0x02, 0x36, 0x77, 0x84, 0xd0, 0x43, 0xe7, 0x92, 0x46,
    0xd0, 0x20, 0x90, 0xe5, 0x0e, 0x7b, 0x1c, 0x11, 0x5e, 0x71, 0xb4, 0x67,
    0x34, 0xfd, 0x01, 0x88, 0x87, 0x64, 0x3f, 0x63, 0xf0, 0x29, 0x06, 0xef,
    0x08, 0x9c, 0x17, 0xac, 0x03, 0x33, 0xb0, 0x3c, 0x7e, 0xd8, 0xc4, 0x09,
    0xe8, 0x06, 0x6c, 0x27, 0x90, 0x1d, 0x6a, 0x8c, 0x01, 0x33, 0xd4, 0x24,
    0xa9, 0x43, 0x8c, 0xc5, 0xee, 0x1b, 0x64, 0x28, 0x10, 0x64, 0xf4, 0x36,
    0x2e, 0xd6, 0x02, 0x1d, 0x28, 0x36, 0xbf, 0x3b, 0xda, 0x53, 0x21, 0x2a,
    0x82, 0xed, 0x03, 0x18, 0x7e, 0x85, 0x64, 0x08, 0xf1, 0x01, 0x98, 0x14,
    0xcc, 0xcf, 0x0c, 0x3b, 0x10, 0x64, 0x64, 0xc0, 0x0b, 0x63, 0xef, 0x30,
    0x01, 0x42, 0xdc, 0xb7, 0x74, 0xdb, 0x8a, 0x38, 0x83, 0x38, 0x87, 0xbd,
    0x04, 0x4c, 0x56, 0x1e, 0x4f, 0xc4, 0x61, 0x47, 0x20, 0x22, 0xa0, 0x54,
    0x15, 0x98, 0x4a, 0x08, 0x02, 0x93, 0x96, 0x78, 0xa3, 0xae, 0x09, 0x81,
    0x76, 0x08, 0x8d, 0xab, 0x65, 0xf7, 0x36, 0x70, 0x84, 0x5e, 0xa8, 0x07,
    0x02, 0xa2, 0x90, 0xdc, 0xc1, 0x31, 0x24, 0x29, 0xac, 0x3f, 0xbb, 0x5c,
    0x03, 0x08, 0xe2, 0x38, 0x63, 0xfe, 0x46, 0x93, 0xf9, 0xe9, 0xaa, 0xba,
    0x08, 0xa8, 0x97, 0x07, 0x14, 0x01, 0xc9, 0xc1, 0x79, 0x85, 0xb5, 0x82,
    0x88, 0xc6, 0x09, 0xac, 0xbd, 0x50, 0xa7, 0x4d, 0x4f, 0x20, 0x70, 0xfb,
    0xfa, 0x18, 0x00, 0x40, 0x43, 0x14, 0x6a, 0x94, 0x02, 0x15, 0x54, 0x2f,
    0x88, 0x80, 0x38, 0xf0, 0x10, 0xef, 0x67, 0xe3, 0x57, 0x66, 0xee, 0x63,
    0xd1, 0xe9, 0xd4, 0x4b, 0x22, 0x1a, 0xbc, 0xab, 0xb2, 0x0b, 0xe2, 0x41,
    0x8e, 0x2d, 0x78, 0x70, 0xd5, 0xb2, 0xcd, 0x05, 0x9b, 0x42, 0xef, 0x5d,
    0x19, 0xe1, 0x37, 0xe6, 0xfa, 0x21, 0xf3, 0x3b, 0xc4, 0x16, 0x8c, 0x00,
    0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image2_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x20,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x73, 0x7a, 0x7a, 0xf4, 0x00, 0x00, 0x06,
    0xa1, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0xc5, 0x97, 0x4f, 0x68, 0x14,
    0x59, 0x1e, 0xc7, 0x3f, 0x1d, 0x2a, 0xcc, 0x2b, 0x68, 0xd9, 0xaa, 0x25,
    0x81, 0x2e, 0x88, 0x60, 0x41, 0x02, 0xd3, 0x8d, 0x03, 0x26, 0x30, 0x30,
    0xc6, 0x15, 0x76, 0xc2, 0x7a, 0xd0, 0xc1, 0x83, 0x8a, 0x17, 0xc5, 0x43,
    0x74, 0xe6, 0x94, 0xbd, 0x8d, 0xce, 0x61, 0x74, 0x07, 0x66, 0xc6, 0xcc,
    0x69, 0x3c, 0x2c, 0x6b, 0xf0, 0x94, 0xf5, 0x90, 0x4d, 0x3c, 0x88, 0xe3,
    0x41, 0xcc, 0x1e, 0x66, 0xd1, 0x85, 0x5d, 0x3a, 0x03, 0x2e, 0x69, 0x41,
    0xe9, 0x0a, 0x28, 0x53, 0x0d, 0x06, 0xaa, 0xc0, 0x86, 0x2a, 0x48, 0xc1,
    0xfb, 0x41, 0x0a, 0x7a, 0x0f, 0xaf, 0x53, 0xdd, 0x1d, 0xc3, 0xae, 0xac,
    0x0c, 0xfb, 0x85, 0xa6, 0xfb, 0xbd, 0xfa, 0xd5, 0xef, 0xfd, 0xfe, 0x7d,
    0x7f, 0xbf, 0xd7, 0xa5, 0x7a, 0xbd, 0x0e, 0x40, 0x87, 0xf7, 0x3a, 0x49,
    0x3b, 0x42, 0x44, 0x10, 0x2d, 0xa4, 0x69, 0xca, 0xd4, 0x87, 0x53, 0x25,
    0xf6, 0x40, 0x27, 0xef, 0x74, 0x24, 0x13, 0x92, 0x24, 0x41, 0x72, 0x21,
    0xcd, 0x52, 0xa6, 0x26, 0xf7, 0x96, 0xfd, 0xf9, 0xc5, 0xcf, 0x1d, 0x65,
    0x2b, 0x44, 0x0b, 0x92, 0x83, 0x52, 0x8a, 0x47, 0x7f, 0x5f, 0xe5, 0xd3,
    0xd9, 0x4f, 0x4b, 0x00, 0xa5, 0x6f, 0xbf, 0xfe, 0xb6, 0x73, 0xed, 0xca,
    0xe7, 0xd0, 0x0a, 0x60, 0x7c, 0x0a, 0x86, 0x81, 0x2d, 0x0d, 0x71, 0x48,
    0x33, 0x13, 0xae, 0x7c, 0xf9, 0x07, 0xae, 0x7d, 0x75, 0xad, 0x50, 0x7e,
    0xe8, 0xe0, 0xa1, 0x4e, 0xdc, 0x8e, 0xa9, 0x54, 0x2a, 0xd8, 0xb6, 0x8d,
    0xd6, 0x9a, 0x38, 0x4e, 0xd1, 0x59, 0xc2, 0x8d, 0x3f, 0xdd, 0x28, 0x14,
    0x03, 0xfc, 0x4a, 0xbd, 0xd7, 0xa9, 0x39, 0x0a, 0x1c, 0x0f, 0x5c, 0xd7,
    0x6c, 0x86, 0x21, 0x28, 0xc5, 0xf7, 0x4b, 0xcb, 0x1c, 0x39, 0x7a, 0xa4,
    0x34, 0xe4, 0x57, 0xab, 0xf0, 0x32, 0x80, 0xfb, 0x2b, 0x10, 0x87, 0x46,
    0xe8, 0x65, 0x03, 0x1e, 0xac, 0x50, 0x2b, 0x2b, 0xaa, 0x1f, 0x4c, 0x16,
    0xde, 0x34, 0x1b, 0xcd, 0x4e, 0x9a, 0xa6, 0x2c, 0xdf, 0x59, 0x26, 0x6c,
    0xc5, 0x00, 0xc4, 0x9b, 0x31, 0xcb, 0x77, 0x97, 0xc1, 0xb2, 0x99, 0x3a,
    0x38, 0x35, 0xe0, 0x7d, 0x6d, 0xcc, 0x87, 0x07, 0x3f, 0xc0, 0x4f, 0xab,
    0x66, 0x43, 0x6b, 0xb8, 0xbf, 0x08, 0x2f, 0xd7, 0x99, 0x3e, 0x3c, 0xcd,
    0xd5, 0x2f, 0xaf, 0x76, 0xac, 0xf4, 0x75, 0x0c, 0x67, 0xcf, 0x40, 0xc5,
    0x83, 0x51, 0xcf, 0x08, 0x4e, 0x4e, 0xc3, 0x98, 0x0f, 0xca, 0x41, 0x4b,
    0x52, 0x28, 0x4c, 0xd2, 0x04, 0x6f, 0xbf, 0xc7, 0xdc, 0xec, 0x1c, 0xee,
    0x88, 0xf1, 0xc8, 0x9f, 0xf0, 0x99, 0x9b, 0xbd, 0x84, 0x52, 0x8a, 0x55,
    0xd1, 0x03, 0x06, 0x68, 0xa5, 0xb0, 0x2f, 0xcc, 0x81, 0x52, 0x66, 0xc3,
    0xb6, 0xe1, 0xc2, 0x1c, 0x38, 0x1e, 0xc9, 0xdf, 0x1e, 0x02, 0x30, 0x84,
    0x74, 0xa5, 0x47, 0x3d, 0x48, 0x12, 0x08, 0x9a, 0xb0, 0x6d, 0xd6, 0x1a,
    0xb0, 0xb1, 0x0b, 0x85, 0xa9, 0xa4, 0x00, 0xb8, 0x9e, 0x0b, 0x39, 0x34,
    0x83, 0x26, 0x68, 0x70, 0x47, 0x5d, 0x6c, 0xd5, 0x93, 0xdb, 0x81, 0xe4,
    0x62, 0x42, 0x6f, 0xdb, 0x46, 0xef, 0xeb, 0xc8, 0x9c, 0x33, 0x0c, 0xe4,
    0xe6, 0x33, 0x94, 0xf4, 0x79, 0x68, 0x52, 0xb1, 0xd0, 0x4b, 0x05, 0xa0,
    0xf3, 0x3e, 0xaf, 0xa4, 0xf7, 0xb3, 0xd9, 0x6a, 0xf2, 0xc3, 0xfd, 0x55,
    0x9a, 0x2f, 0x9b, 0x6f, 0xca, 0xed, 0xc6, 0x96, 0x86, 0x07, 0x7f, 0x86,
    0xa7, 0xf5, 0x41, 0xe3, 0x2c, 0xb0, 0xc8, 0xfb, 0x04, 0x0f, 0x4e, 0xc3,
    0x78, 0x15, 0xca, 0x6e, 0xb1, 0x65, 0x5b, 0x3d, 0xcf, 0xfa, 0x8d, 0xad,
    0x8d, 0xd7, 0xf0, 0x66, 0xbd, 0x22, 0x15, 0xfd, 0x91, 0x2a, 0xb0, 0xa3,
    0x7b, 0x9f, 0x0d, 0x9f, 0x5d, 0xed, 0xa5, 0x62, 0xe7, 0x59, 0x0e, 0x56,
    0x2a, 0x62, 0x8a, 0xa3, 0x1d, 0x43, 0xc5, 0x37, 0x21, 0xdb, 0xd2, 0xd0,
    0x4e, 0x41, 0xa9, 0x37, 0x22, 0xa0, 0xb5, 0x46, 0x52, 0x41, 0x39, 0x0a,
    0xd7, 0x73, 0xcd, 0xba, 0x2d, 0xa0, 0x78, 0x13, 0x39, 0x10, 0x45, 0xe6,
    0x60, 0xd7, 0x35, 0xa9, 0x7d, 0x15, 0xc2, 0x48, 0x05, 0xd9, 0x36, 0xe1,
    0x1c, 0x02, 0xe0, 0x79, 0x03, 0x96, 0x16, 0xa0, 0x65, 0xc2, 0xc9, 0xf3,
    0x35, 0x58, 0xba, 0x01, 0x9b, 0x21, 0xb6, 0xea, 0x45, 0x43, 0x10, 0xe2,
    0x56, 0xcc, 0xc2, 0xed, 0x45, 0xc2, 0x97, 0x26, 0x4d, 0x71, 0x2b, 0x66,
    0x61, 0x69, 0x91, 0xb0, 0x15, 0x81, 0x35, 0x78, 0xbe, 0xa4, 0x11, 0xdc,
    0x5d, 0x84, 0x7f, 0x76, 0x59, 0x90, 0x25, 0x66, 0xfd, 0xd3, 0x23, 0xd4,
    0xb0, 0x42, 0x10, 0xac, 0x28, 0x8e, 0x88, 0xca, 0x0e, 0xde, 0xc9, 0x73,
    0x50, 0xf1, 0xd1, 0x1a, 0xec, 0xf1, 0x49, 0x70, 0x1c, 0x82, 0xb6, 0x90,
    0x64, 0x51, 0xa1, 0x30, 0x7c, 0x11, 0x82, 0x05, 0xe7, 0xcf, 0x9e, 0xc1,
    0x19, 0x71, 0x00, 0xa8, 0x8c, 0x55, 0x38, 0x7f, 0xea, 0x0c, 0x5a, 0x34,
    0x03, 0xe9, 0x04, 0x82, 0xcd, 0x18, 0xe7, 0xd8, 0x09, 0x6c, 0xc7, 0x43,
    0x6b, 0x0d, 0x4a, 0x61, 0x1f, 0x3f, 0x47, 0x92, 0x43, 0xe3, 0xc7, 0x15,
    0x94, 0xa5, 0xb0, 0xaa, 0x07, 0x7c, 0x82, 0xcd, 0x98, 0xc0, 0x52, 0x10,
    0xaf, 0xf5, 0xde, 0x56, 0x0a, 0x9d, 0x25, 0xb8, 0x7d, 0xf5, 0x30, 0xff,
    0xdd, 0x7c, 0xe9, 0xf2, 0x17, 0x97, 0x3b, 0xa7, 0x4f, 0x9d, 0x46, 0x59,
    0x0a, 0x91, 0x5e, 0xe8, 0xd3, 0x38, 0xa5, 0xf1, 0xb4, 0xc1, 0x91, 0xa3,
    0x47, 0x06, 0x8c, 0x78, 0xd4, 0x4a, 0x81, 0x08, 0x72, 0x4c, 0x27, 0xb4,
    0x4c, 0x01, 0x7a, 0x15, 0xcf, 0x14, 0xa1, 0x2a, 0x2b, 0x66, 0x8e, 0xcd,
    0xa0, 0xb5, 0x26, 0xdc, 0x08, 0x79, 0xfc, 0x64, 0x8d, 0xd3, 0xc7, 0x4e,
    0xe0, 0x54, 0x1c, 0x6c, 0xcb, 0xe6, 0xf1, 0xe3, 0xc7, 0x03, 0x0a, 0x2f,
    0x7f, 0x71, 0x79, 0xcf, 0x96, 0x8b, 0x0f, 0x53, 0x87, 0x07, 0x1b, 0xd1,
    0xcc, 0x6f, 0x67, 0x4c, 0x0d, 0x65, 0x02, 0x77, 0x17, 0x60, 0x62, 0x12,
    0xf9, 0x68, 0x06, 0x77, 0x9f, 0xcd, 0xc3, 0xbf, 0x3e, 0x34, 0x45, 0xb8,
    0x43, 0x2d, 0xdb, 0xb6, 0xb1, 0xcb, 0x36, 0x15, 0xd7, 0x41, 0x95, 0x95,
    0x69, 0xb3, 0x5b, 0x1a, 0xb5, 0x67, 0x75, 0xbd, 0x1d, 0x74, 0xa6, 0xb1,
    0x5d, 0x1b, 0xb0, 0xc1, 0xaf, 0x42, 0xc5, 0xc3, 0xde, 0xd7, 0x65, 0x4b,
    0xc1, 0x82, 0x2c, 0xed, 0x39, 0x31, 0xe1, 0xe3, 0x1f, 0xf0, 0x4d, 0xa3,
    0xe8, 0x42, 0x72, 0x19, 0x50, 0xfa, 0x97, 0x27, 0xba, 0xe3, 0x57, 0xab,
    0x88, 0x24, 0x80, 0x8d, 0xe4, 0x1a, 0x2c, 0x9b, 0xf0, 0x59, 0x93, 0xdf,
    0x7f, 0xfc, 0xeb, 0x81, 0xe8, 0x08, 0x62, 0xe8, 0x69, 0x03, 0xc7, 0xcf,
    0x0c, 0xe8, 0xe9, 0xf5, 0x01, 0x0b, 0xa2, 0x57, 0x11, 0xc1, 0x46, 0xc0,
    0xe4, 0xa1, 0x49, 0xdc, 0x51, 0x97, 0x30, 0x8c, 0x08, 0x5b, 0x21, 0xd5,
    0x71, 0x1f, 0xd5, 0xc7, 0xdd, 0xeb, 0x77, 0xd6, 0x3b, 0x9f, 0x5f, 0x99,
    0x43, 0xe7, 0x09, 0x92, 0x7b, 0x46, 0x49, 0xae, 0x40, 0xc1, 0xe4, 0xf8,
    0x0c, 0xf7, 0x7e, 0x5c, 0xeb, 0x9c, 0xf9, 0xd0, 0xee, 0x19, 0x91, 0xa6,
    0xf0, 0xaf, 0x3a, 0x8c, 0xb8, 0xa6, 0xbd, 0x6f, 0x69, 0x33, 0x17, 0xc6,
    0xaa, 0xa8, 0x2e, 0xbb, 0x86, 0x24, 0x13, 0x92, 0x34, 0x61, 0x3d, 0x08,
    0x90, 0x4c, 0xba, 0xa1, 0x4b, 0x08, 0x9e, 0x35, 0xcc, 0x68, 0xee, 0x8b,
    0x80, 0xb2, 0x14, 0x3a, 0x4f, 0x48, 0x45, 0x48, 0x33, 0x41, 0xc4, 0x14,
    0x96, 0x83, 0x02, 0xe4, 0x4d, 0x1a, 0x8a, 0x86, 0xa8, 0x05, 0x69, 0x5f,
    0xb7, 0x7d, 0x15, 0x42, 0x96, 0x9a, 0x67, 0xc0, 0x50, 0xd2, 0x4e, 0xc0,
    0x82, 0xb9, 0x0b, 0x17, 0x51, 0x8e, 0x42, 0x6f, 0x69, 0xbc, 0x31, 0x8f,
    0x8b, 0x17, 0x2e, 0x12, 0x6e, 0x86, 0xe8, 0xb4, 0xd7, 0x88, 0x24, 0x17,
    0x24, 0x57, 0xa4, 0xd9, 0xce, 0x1a, 0x2a, 0x7d, 0x11, 0xd2, 0x83, 0xd9,
    0xa2, 0xbe, 0x11, 0x92, 0x1c, 0x3f, 0x47, 0x72, 0x70, 0x9a, 0x24, 0xd1,
    0x24, 0x22, 0xe8, 0x53, 0x73, 0x84, 0x8e, 0x47, 0x10, 0x34, 0x4c, 0x0a,
    0xfc, 0xf7, 0x7d, 0xd2, 0x76, 0xca, 0xda, 0x66, 0x97, 0x82, 0xb9, 0x06,
    0x65, 0xf7, 0x38, 0xbd, 0xdb, 0xab, 0x5c, 0x50, 0x96, 0xc9, 0x70, 0xa5,
    0xec, 0x98, 0xe7, 0x16, 0xc8, 0xae, 0xc3, 0x01, 0xaa, 0x07, 0x7c, 0x1a,
    0x4f, 0xcd, 0x41, 0x5a, 0x74, 0xd1, 0xd6, 0x95, 0x52, 0xf8, 0x63, 0xbe,
    0x29, 0x42, 0x57, 0xb9, 0x4c, 0x1f, 0x9d, 0x36, 0x6f, 0x34, 0xea, 0xf0,
    0x8f, 0x3a, 0x9c, 0x3a, 0x0f, 0xfb, 0x7d, 0xd8, 0x86, 0xd5, 0x07, 0xab,
    0x3d, 0x0f, 0x73, 0x93, 0x06, 0x41, 0x70, 0x94, 0xd3, 0x35, 0x04, 0x28,
    0xf8, 0x3d, 0x68, 0x40, 0xed, 0x60, 0x8d, 0xda, 0x70, 0x0d, 0xbd, 0xa5,
    0x59, 0xb9, 0xb3, 0x82, 0x3f, 0x51, 0x65, 0xe6, 0x63, 0x73, 0x96, 0x64,
    0xd2, 0x9d, 0x86, 0x59, 0x5f, 0x7e, 0x46, 0x3c, 0x98, 0xa8, 0x42, 0xd9,
    0xe9, 0x86, 0x54, 0x0f, 0xce, 0x82, 0xbc, 0x9f, 0x15, 0x52, 0x44, 0x64,
    0x27, 0x1d, 0xbb, 0xa1, 0x33, 0xf3, 0xae, 0xad, 0x6c, 0xfc, 0x89, 0x2a,
    0xfe, 0x98, 0xd7, 0x7b, 0x26, 0x7a, 0x8f, 0x69, 0xb8, 0xdf, 0x37, 0x9f,
    0xbe, 0x23, 0xfa, 0xa7, 0xa1, 0xa0, 0x01, 0x85, 0xb2, 0x04, 0x65, 0x99,
    0xdc, 0xf7, 0xbe, 0x31, 0x94, 0xec, 0x9b, 0x8a, 0x92, 0x77, 0x69, 0x38,
    0x4c, 0xe1, 0x79, 0x81, 0x6e, 0xf4, 0x86, 0xd2, 0x5c, 0xe0, 0x45, 0x13,
    0x56, 0x16, 0x20, 0x8a, 0xd0, 0x60, 0x2e, 0x0f, 0x77, 0x17, 0x51, 0xed,
    0x18, 0x4d, 0xff, 0x9c, 0xb7, 0xc1, 0x12, 0x9c, 0x9d, 0xc2, 0xeb, 0x2a,
    0xb1, 0x77, 0xd5, 0x49, 0x61, 0x40, 0x26, 0x2c, 0xdf, 0xbd, 0x47, 0x7d,
    0x6d, 0x1d, 0xb6, 0x41, 0x6f, 0x69, 0x96, 0x57, 0xee, 0xd1, 0x6c, 0x34,
    0x0b, 0x99, 0x21, 0x9d, 0x09, 0xe4, 0xc2, 0x4e, 0x53, 0xef, 0x9f, 0xea,
    0x86, 0x2a, 0xbd, 0x9d, 0x1b, 0xb3, 0x53, 0xa5, 0x28, 0x86, 0x34, 0xa7,
    0x60, 0x83, 0xe4, 0x10, 0x09, 0x04, 0x2d, 0x41, 0xed, 0x6a, 0x5a, 0x22,
    0x82, 0xe7, 0xb8, 0xa6, 0x56, 0x86, 0x8d, 0xc1, 0xce, 0x3e, 0x65, 0x0c,
    0xcf, 0xe9, 0xa6, 0x40, 0x12, 0x1e, 0x6d, 0xa6, 0x54, 0x3e, 0x38, 0x6c,
    0xf8, 0xda, 0x36, 0x35, 0x21, 0xe3, 0x87, 0x09, 0x9f, 0x07, 0xdd, 0x8e,
    0xd7, 0xc3, 0x11, 0x6b, 0xa3, 0xf4, 0xfd, 0xed, 0x66, 0x47, 0x75, 0xeb,
    0x64, 0xc7, 0x78, 0x49, 0x43, 0x24, 0x78, 0x0c, 0xc7, 0xae, 0x15, 0xb2,
    0x0b, 0xb7, 0x16, 0xb8, 0xf8, 0xd9, 0x45, 0xdc, 0xb2, 0x4b, 0x18, 0x98,
    0x49, 0x5a, 0x7b, 0xbf, 0x46, 0x14, 0x47, 0x34, 0x82, 0x06, 0xf3, 0xdf,
    0xcc, 0x97, 0x4a, 0x37, 0xff, 0x78, 0xb3, 0x73, 0xfa, 0xec, 0x39, 0x92,
    0x76, 0x44, 0x9a, 0xa6, 0x44, 0x71, 0x84, 0x7f, 0xc0, 0x47, 0x95, 0x5d,
    0xdc, 0xb2, 0x62, 0xe1, 0xd6, 0x02, 0x9f, 0x9c, 0xfc, 0x64, 0xef, 0x01,
    0xf4, 0x96, 0xb8, 0xfe, 0xcd, 0xf5, 0x8e, 0x52, 0xaa, 0x4b, 0x61, 0x33,
    0x45, 0x77, 0xae, 0xfa, 0x56, 0x92, 0x25, 0x78, 0x9e, 0x8b, 0xe7, 0xb9,
    0x34, 0x9f, 0x35, 0x79, 0xb4, 0x56, 0x67, 0xe6, 0x37, 0x33, 0xe6, 0xe2,
    0xb9, 0xfd, 0xe6, 0x2c, 0xf8, 0x5f, 0xd0, 0xff, 0xbf, 0x62, 0x37, 0x06,
    0x58, 0x50, 0xdc, 0xf3, 0x1c, 0xd3, 0xa7, 0xb5, 0xbc, 0xdb, 0x34, 0x7c,
    0x1b, 0x0c, 0x89, 0x08, 0x6c, 0x43, 0x14, 0x99, 0x2b, 0x95, 0x3b, 0xea,
    0xa2, 0x73, 0x4d, 0xf2, 0x3a, 0x31, 0xbc, 0xe7, 0xdd, 0x23, 0xf0, 0x1f,
    0x0d, 0x50, 0x96, 0x62, 0xfd, 0xf9, 0x3a, 0x8b, 0x4b, 0xcb, 0x84, 0x2d,
    0x73, 0xcf, 0x0b, 0x9e, 0x07, 0x2c, 0xde, 0x5e, 0x24, 0x8c, 0xc3, 0x82,
    0xe7, 0xbf, 0x14, 0xac, 0xc6, 0x46, 0x83, 0x4b, 0x23, 0x97, 0x38, 0x7d,
    0xf2, 0x04, 0x95, 0xb1, 0x0a, 0x00, 0xd5, 0xf1, 0x2a, 0xaa, 0xac, 0x40,
    0x60, 0xa0, 0x53, 0xfe, 0x02, 0x28, 0xd5, 0xeb, 0x75, 0x6e, 0xde, 0xba,
    0xd9, 0x39, 0xf1, 0xbb, 0x13, 0xe6, 0x8e, 0xd7, 0x85, 0xb2, 0x14, 0x8d,
    0x8d, 0x06, 0xeb, 0x4f, 0xd6, 0x99, 0xff, 0x6e, 0xfe, 0x9d, 0x58, 0xf0,
    0x5f, 0x0d, 0xf8, 0x7f, 0xe2, 0xdf, 0x7e, 0x80, 0x33, 0x39, 0x25, 0xb4,
    0xe1, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42,
    0x60, 0x82
};

static const unsigned char image3_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x1f, 0xf3, 0xff, 0x61, 0x00, 0x00, 0x01,
    0xdb, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0x95, 0x92, 0x3f, 0x68, 0x13,
    0x51, 0x1c, 0xc7, 0x3f, 0x17, 0x2f, 0xe6, 0x1d, 0x24, 0x78, 0x57, 0x22,
    0xe4, 0x29, 0x42, 0xaf, 0xe8, 0x10, 0xb1, 0x60, 0x82, 0x20, 0xa9, 0x53,
    0x23, 0x2e, 0x15, 0x17, 0x9d, 0x04, 0xb7, 0x82, 0xa0, 0x74, 0x11, 0xc5,
    0xc1, 0x4a, 0xa1, 0x1d, 0x85, 0xe0, 0xa2, 0x4e, 0x76, 0x6a, 0xa4, 0x93,
    0xcd, 0x20, 0xcd, 0x76, 0x5d, 0x84, 0x38, 0x08, 0x3d, 0x21, 0x92, 0x73,
    0xab, 0xdb, 0x2d, 0x62, 0x0e, 0x0c, 0xdc, 0x03, 0x03, 0xcf, 0xe1, 0x72,
    0xd4, 0xe1, 0x52, 0xda, 0x2f, 0x3c, 0x7e, 0x3f, 0x78, 0x7c, 0xff, 0xbc,
    0xdf, 0xef, 0x19, 0xbd, 0x5e, 0x8f, 0x14, 0x5e, 0x3f, 0xd6, 0xaa, 0x58,
    0x01, 0x2c, 0xec, 0xfc, 0x10, 0x86, 0x21, 0x37, 0xe6, 0x67, 0x0c, 0x8e,
    0x80, 0x99, 0x36, 0xed, 0xfe, 0x19, 0x6d, 0xb9, 0x57, 0x11, 0x65, 0x0b,
    0x61, 0x42, 0x84, 0x8b, 0x18, 0xc7, 0x78, 0x81, 0xaf, 0x6f, 0xba, 0xc6,
    0x54, 0x91, 0x1c, 0xc0, 0xfb, 0xaf, 0x05, 0xed, 0xd4, 0x2e, 0x53, 0xbd,
    0x62, 0x51, 0xbb, 0x08, 0xb2, 0x0c, 0x52, 0x80, 0x63, 0x5b, 0xc8, 0xc5,
    0x05, 0xbc, 0xfe, 0x6f, 0x3d, 0x4d, 0xe0, 0x94, 0x9e, 0x69, 0x68, 0x71,
    0xbd, 0xc9, 0xdc, 0x6c, 0x9e, 0xf9, 0xf3, 0x70, 0xa1, 0x00, 0x23, 0x05,
    0x45, 0x1b, 0xcc, 0xd3, 0x49, 0xcd, 0x97, 0x4a, 0x9c, 0x55, 0xd1, 0x7a,
    0x66, 0x02, 0x25, 0x2a, 0x38, 0x65, 0x0b, 0xbb, 0x08, 0x36, 0x60, 0xfd,
    0x4d, 0x1e, 0x26, 0x4b, 0x20, 0x1d, 0x90, 0x79, 0x70, 0xab, 0x92, 0x76,
    0x67, 0x3f, 0x33, 0x85, 0xa9, 0x4c, 0x0b, 0x5b, 0x40, 0x18, 0x01, 0x0a,
    0x84, 0x48, 0x88, 0x82, 0xe4, 0x40, 0x22, 0xac, 0x46, 0xc3, 0x29, 0x43,
    0x8c, 0x42, 0x94, 0x09, 0xce, 0x18, 0x14, 0x20, 0x8b, 0x87, 0x64, 0x6b,
    0x52, 0x15, 0xa0, 0x46, 0x2a, 0x7b, 0x88, 0x61, 0xe0, 0xa3, 0x7e, 0xc5,
    0xc4, 0x63, 0x60, 0x0c, 0xf1, 0x84, 0x90, 0x3a, 0x4b, 0x60, 0xf0, 0x79,
    0x9f, 0x95, 0x47, 0xb7, 0x33, 0x37, 0x91, 0x6b, 0xad, 0xdd, 0x33, 0x82,
    0x4f, 0x3b, 0x38, 0x15, 0x10, 0xc5, 0xc3, 0x8b, 0xd4, 0x7d, 0xf8, 0x27,
    0xa6, 0xbb, 0xdd, 0xcd, 0x74, 0x87, 0xc9, 0x1a, 0x9f, 0xdd, 0x99, 0x33,
    0xf6, 0x5e, 0x7f, 0x40, 0x8d, 0x62, 0xc8, 0x27, 0xc4, 0x18, 0xf0, 0x83,
    0x90, 0x97, 0xab, 0x2d, 0x30, 0x1d, 0xbc, 0xce, 0x6e, 0xe6, 0x10, 0x8d,
    0xff, 0x7f, 0xe2, 0xd3, 0x8d, 0xb6, 0x76, 0x2f, 0xb9, 0x08, 0x61, 0xa1,
    0xa2, 0x21, 0x07, 0x41, 0x40, 0xeb, 0xd5, 0x8a, 0xf1, 0x71, 0x6b, 0x57,
    0x37, 0xec, 0x1e, 0x55, 0x33, 0x20, 0xf8, 0x11, 0x71, 0xee, 0xc9, 0x9e,
    0x91, 0x29, 0x70, 0x14, 0x0a, 0xfe, 0xaa, 0xae, 0xdf, 0x5a, 0xe0, 0x60,
    0x7b, 0x93, 0xee, 0x97, 0x88, 0xfa, 0x5a, 0x22, 0x92, 0x3b, 0x16, 0x1b,
    0xe8, 0x76, 0x7c, 0x06, 0xdf, 0x43, 0xdc, 0xfb, 0xcb, 0x2c, 0x36, 0x6c,
    0xbc, 0xe7, 0x4d, 0x7d, 0xa2, 0x04, 0x00, 0xed, 0xc7, 0x4b, 0x7a, 0xf9,
    0xc5, 0x5d, 0xea, 0xd7, 0x24, 0x83, 0xad, 0x4d, 0xde, 0x76, 0xa2, 0xe3,
    0x27, 0x00, 0x78, 0xf0, 0xae, 0x6b, 0xb4, 0x36, 0x76, 0x18, 0x7c, 0x0b,
    0x91, 0xb5, 0x26, 0xd8, 0xee, 0xc9, 0x12, 0xa4, 0x78, 0xf3, 0x70, 0x49,
    0xdb, 0xb3, 0x55, 0x7e, 0xaa, 0x2a, 0xff, 0x00, 0x57, 0xdb, 0xa1, 0x8b,
    0x3c, 0xe5, 0xd9, 0x55, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44,
    0xae, 0x42, 0x60, 0x82
};

static const unsigned char image4_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x1f, 0xf3, 0xff, 0x61, 0x00, 0x00, 0x00,
    0xdf, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0xe5, 0x92, 0x31, 0x6b, 0xc2,
    0x60, 0x10, 0x86, 0x9f, 0x48, 0x0a, 0xc9, 0xdf, 0x34, 0x50, 0x28, 0xba,
    0x28, 0x59, 0x8a, 0xc9, 0xd2, 0x39, 0xfd, 0x03, 0x85, 0x74, 0x68, 0x0e,
    0x9c, 0xe2, 0xe6, 0xec, 0x10, 0x88, 0x9b, 0x63, 0xe2, 0x20, 0x24, 0x43,
    0x41, 0x07, 0xc1, 0xa5, 0x90, 0x0f, 0x1a, 0xf8, 0x3a, 0x84, 0x14, 0xc1,
    0x04, 0x8a, 0x2e, 0x42, 0xdf, 0xe5, 0xb8, 0x3b, 0xee, 0xe1, 0x3d, 0x78,
    0x8d, 0x34, 0x4d, 0xb9, 0x45, 0x83, 0x9b, 0xae, 0xff, 0x01, 0x40, 0x22,
    0xd1, 0xce, 0xd0, 0xd1, 0x57, 0x01, 0xe2, 0x79, 0xac, 0x83, 0xd7, 0x80,
    0x6c, 0x93, 0xe1, 0x3c, 0xf6, 0x43, 0x3a, 0x01, 0x12, 0x89, 0x9e, 0xf9,
    0x33, 0x0e, 0x9f, 0x07, 0xb2, 0x32, 0x63, 0xb9, 0x58, 0xd2, 0xe7, 0xe4,
    0x02, 0x10, 0xcf, 0x63, 0xed, 0x3d, 0x7b, 0x14, 0x65, 0xc1, 0xfe, 0xb8,
    0x47, 0x7d, 0x29, 0x4e, 0xc7, 0x13, 0xf2, 0x21, 0x9d, 0x4e, 0x8c, 0xf3,
    0x20, 0x49, 0x24, 0xda, 0x9d, 0xb8, 0x14, 0xbb, 0x82, 0xaa, 0xae, 0xb0,
    0x4d, 0x9b, 0x8a, 0x0a, 0x1b, 0xfb, 0xb7, 0x1f, 0x4f, 0xc7, 0x84, 0xef,
    0xa1, 0x71, 0x01, 0x90, 0x48, 0xf4, 0xe8, 0x69, 0x44, 0xbe, 0xcd, 0xe1,
    0x1b, 0x78, 0xa0, 0xb7, 0xfa, 0x2f, 0x3e, 0xe1, 0x5b, 0x03, 0x31, 0x5b,
    0xd2, 0x2a, 0x59, 0xb1, 0x4e, 0xd6, 0xa8, 0x5a, 0x35, 0xd3, 0x1a, 0x2c,
    0xd3, 0x42, 0xa1, 0xb0, 0xb0, 0x50, 0xb5, 0x6a, 0xfa, 0x76, 0xdf, 0xf5,
    0xc2, 0x35, 0xba, 0xf3, 0x24, 0xfe, 0x45, 0x3f, 0x67, 0x1b, 0x69, 0xac,
    0x6a, 0x30, 0x61, 0x8e, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44,
    0xae, 0x42, 0x60, 0x82
};

static const unsigned char image5_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x1f, 0xf3, 0xff, 0x61, 0x00, 0x00, 0x00,
    0xc6, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0xcd, 0x92, 0x31, 0x0e, 0x82,
    0x40, 0x10, 0x45, 0xdf, 0x1a, 0x0a, 0xb8, 0x91, 0xe1, 0x06, 0x52, 0xd8,
    0xd0, 0x2e, 0x85, 0x81, 0x78, 0x02, 0x2c, 0xf1, 0x06, 0xc4, 0x8a, 0xc6,
    0x96, 0xbd, 0x89, 0xc9, 0xea, 0x71, 0xb6, 0x83, 0x62, 0x13, 0x2c, 0x10,
    0x04, 0x95, 0x68, 0x42, 0x81, 0xd3, 0xec, 0xfe, 0x64, 0xde, 0xcb, 0x24,
    0x33, 0x42, 0x6b, 0xcd, 0x9c, 0x5a, 0xcd, 0xa2, 0xff, 0x42, 0xe0, 0x74,
    0x1f, 0x55, 0xaa, 0x06, 0xc0, 0x73, 0x3c, 0x2a, 0x5b, 0xf5, 0x0d, 0x7d,
    0x76, 0x00, 0xfb, 0xcc, 0x32, 0x92, 0x62, 0x24, 0x00, 0x48, 0x0f, 0x29,
    0x58, 0x70, 0x1d, 0x97, 0xda, 0xd6, 0xed, 0x4b, 0x8d, 0x4b, 0x9b, 0xbb,
    0xee, 0x70, 0x1b, 0x22, 0x23, 0x09, 0x80, 0x18, 0x6e, 0x41, 0x95, 0xaa,
    0x89, 0x77, 0x71, 0x0b, 0xf3, 0x80, 0x07, 0x32, 0x2c, 0x24, 0xfb, 0x84,
    0xe2, 0x5c, 0x88, 0x8e, 0x11, 0xaf, 0x6b, 0x54, 0xa5, 0x6a, 0x82, 0x4d,
    0x00, 0xb6, 0x9d, 0x6f, 0x08, 0x67, 0xc7, 0x6c, 0x04, 0x7f, 0x14, 0x74,
    0x12, 0x7f, 0xed, 0xf7, 0x12, 0x2c, 0xe4, 0xa7, 0xfc, 0x0d, 0x86, 0x89,
    0x2d, 0xc8, 0x48, 0x0a, 0x7d, 0xd3, 0x98, 0xda, 0x60, 0x8c, 0x99, 0x84,
    0x27, 0x27, 0x18, 0x4e, 0x72, 0xbd, 0x5c, 0x27, 0xe1, 0xaf, 0x82, 0x5f,
    0x6a, 0xf9, 0x4b, 0x5c, 0x5e, 0x70, 0x07, 0xca, 0xed, 0x60, 0xf1, 0x55,
    0xdf, 0x18, 0xd8, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae,
    0x42, 0x60, 0x82
};

static const unsigned char image6_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x1f, 0xf3, 0xff, 0x61, 0x00, 0x00, 0x01,
    0x9c, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0x95, 0x93, 0x21, 0x4c, 0x1c,
    0x51, 0x10, 0x86, 0xbf, 0xb7, 0xd9, 0x84, 0x5d, 0x85, 0x25, 0xa8, 0x0b,
    0xaa, 0x41, 0xd5, 0xf6, 0x91, 0x20, 0x2b, 0xda, 0x04, 0x81, 0x40, 0x34,
    0x69, 0x13, 0x10, 0x24, 0xbd, 0xa4, 0xe2, 0x2a, 0x10, 0x27, 0x4e, 0x9c,
    0xa8, 0x40, 0x40, 0x42, 0x05, 0x09, 0x82, 0x26, 0x15, 0xa0, 0x5a, 0xd7,
    0xba, 0xe2, 0x98, 0x3a, 0x82, 0x22, 0x28, 0x72, 0x8a, 0xa0, 0x68, 0x4f,
    0xed, 0x6b, 0xf2, 0x92, 0xa9, 0x98, 0xbd, 0xeb, 0xbe, 0x3b, 0x5a, 0xca,
    0xa8, 0xdd, 0xbc, 0x99, 0xef, 0xcd, 0x3f, 0xf3, 0x3f, 0x27, 0x22, 0x34,
    0xc3, 0x6f, 0xcf, 0x29, 0xa1, 0x42, 0x7a, 0x43, 0xc7, 0x7f, 0x44, 0x96,
    0x14, 0xef, 0xb6, 0x94, 0x58, 0x7f, 0x77, 0x55, 0x1f, 0x04, 0xf0, 0xfb,
    0x8f, 0x14, 0x40, 0xba, 0x37, 0xce, 0x6e, 0x2f, 0xf0, 0x6f, 0xab, 0x7b,
    0x21, 0x19, 0x80, 0xff, 0xf0, 0xd8, 0x8a, 0x3b, 0x83, 0x46, 0xdb, 0x01,
    0xf2, 0x02, 0xdf, 0xbe, 0x55, 0xbf, 0x79, 0xfd, 0x57, 0x50, 0xe6, 0x8f,
    0x9f, 0x58, 0xf1, 0xeb, 0xcb, 0x54, 0x73, 0x5e, 0x40, 0x0c, 0x90, 0x97,
    0xd6, 0xe1, 0xc6, 0xd5, 0x9d, 0x90, 0x6c, 0xa4, 0x79, 0x32, 0xa4, 0xff,
    0xcb, 0x41, 0x01, 0xb1, 0x42, 0x0e, 0xe6, 0x1d, 0x11, 0xfc, 0x8b, 0x8b,
    0x29, 0x48, 0x26, 0x2f, 0xbf, 0xdb, 0x61, 0x3d, 0x83, 0x04, 0xb2, 0xe3,
    0x1c, 0x79, 0x89, 0xdf, 0xbc, 0x56, 0xf9, 0xb8, 0xe0, 0x00, 0xfc, 0xda,
    0x59, 0x92, 0x67, 0x43, 0xcc, 0x4d, 0x82, 0xdf, 0x6d, 0xa9, 0x7f, 0x37,
    0x9b, 0x24, 0xc8, 0x5e, 0x69, 0x85, 0xaf, 0xae, 0x54, 0x8e, 0x16, 0x1d,
    0xb1, 0xc2, 0x3f, 0x3b, 0xd5, 0x14, 0x80, 0x75, 0x20, 0x9d, 0x81, 0xdd,
    0xd8, 0x9f, 0x80, 0x1c, 0xcc, 0x3b, 0x72, 0x93, 0x20, 0x9f, 0x97, 0x0c,
    0xf8, 0xf4, 0x9b, 0x8e, 0x01, 0xb2, 0x7e, 0x6e, 0x32, 0xde, 0xb7, 0x54,
    0xb6, 0x6e, 0x2c, 0x61, 0xc2, 0x07, 0x72, 0x58, 0x4b, 0x58, 0x3d, 0x53,
    0xf9, 0xba, 0xe4, 0x88, 0x01, 0xbf, 0xfc, 0x45, 0xc7, 0x1d, 0xc8, 0x9b,
    0x4b, 0x83, 0x6c, 0xcf, 0xa9, 0xf4, 0x86, 0x8e, 0x7c, 0xda, 0x07, 0x72,
    0xb4, 0x68, 0x90, 0x95, 0x53, 0x95, 0x93, 0xe7, 0x0e, 0x42, 0xea, 0x44,
    0xe9, 0x0c, 0x4c, 0x63, 0x7f, 0x56, 0x47, 0x5b, 0xf0, 0xed, 0xdb, 0x74,
    0xb8, 0xa1, 0x6a, 0xfc, 0x14, 0x29, 0x00, 0x40, 0xba, 0x43, 0x6b, 0xaf,
    0x37, 0xa3, 0xe3, 0x2d, 0xb4, 0x1b, 0x46, 0xaa, 0x7d, 0x51, 0xd3, 0xa6,
    0x01, 0x50, 0x7b, 0x20, 0x06, 0xfc, 0x96, 0xaa, 0xec, 0x95, 0x26, 0x6d,
    0xed, 0x42, 0x6d, 0x85, 0x15, 0xf0, 0x07, 0xe2, 0x26, 0x5f, 0x63, 0x33,
    0x46, 0x33, 0x90, 0x9d, 0xf2, 0xce, 0x97, 0xe9, 0x97, 0x3f, 0xe9, 0x3f,
    0x01, 0x80, 0xcd, 0x20, 0x06, 0xb3, 0x75, 0x08, 0x10, 0x7e, 0x40, 0x00,
    0xc2, 0x4f, 0x88, 0xf0, 0x1b, 0x1a, 0x0a, 0xc1, 0x2b, 0x5d, 0xb3, 0x0f,
    0x4a, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60,
    0x82
};

static const unsigned char image7_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x1f, 0xf3, 0xff, 0x61, 0x00, 0x00, 0x01,
    0xc5, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0x8d, 0x92, 0xb1, 0x6b, 0x53,
    0x51, 0x14, 0x87, 0xbf, 0x5b, 0x02, 0x39, 0x0f, 0x0a, 0x26, 0x92, 0xe1,
    0x29, 0x1d, 0xfa, 0x44, 0x21, 0x3a, 0xd5, 0x80, 0x43, 0xba, 0xf9, 0x8a,
    0x83, 0x11, 0x07, 0x75, 0x72, 0x2c, 0xe2, 0xe4, 0x54, 0xf0, 0x2f, 0x70,
    0x17, 0x07, 0x11, 0x07, 0x29, 0x1d, 0xc4, 0x49, 0xb4, 0x83, 0x90, 0x45,
    0x78, 0x4b, 0xe4, 0x65, 0x10, 0x92, 0x82, 0xd0, 0x76, 0x4b, 0x87, 0xd0,
    0x77, 0x87, 0x90, 0xde, 0xc2, 0x83, 0x77, 0x85, 0xc0, 0x75, 0xd0, 0xbe,
    0x18, 0x12, 0x7d, 0x3d, 0xdb, 0x39, 0xe7, 0x9e, 0x8f, 0xf3, 0x3b, 0xf7,
    0xa7, 0xe2, 0x38, 0xa6, 0x28, 0xca, 0x25, 0xdf, 0xfd, 0x9c, 0x68, 0xb5,
    0xa8, 0xb7, 0x54, 0x3c, 0x7c, 0xc1, 0x05, 0xab, 0xfe, 0x3f, 0xfb, 0x85,
    0x80, 0x6a, 0xa5, 0x8a, 0x49, 0xcd, 0x4c, 0x6d, 0xac, 0x9d, 0xf3, 0x6b,
    0x75, 0x77, 0x2e, 0x40, 0xa2, 0x4f, 0xc8, 0x52, 0x9b, 0xe7, 0xfb, 0x3f,
    0xc6, 0xee, 0xde, 0x83, 0x75, 0x92, 0x51, 0x02, 0x40, 0xa9, 0x08, 0x70,
    0x62, 0x2c, 0x4c, 0x2c, 0x4a, 0xa0, 0xf7, 0xfd, 0xd8, 0x3d, 0x7b, 0xfa,
    0x88, 0x5e, 0x7f, 0x80, 0xe2, 0x54, 0x9d, 0x0b, 0xa0, 0x93, 0x04, 0x53,
    0x82, 0xc1, 0x50, 0xbb, 0x27, 0x9b, 0x0f, 0xf9, 0xb4, 0x1b, 0x71, 0x39,
    0xf0, 0xf2, 0x83, 0x16, 0x4a, 0xe8, 0xed, 0x1d, 0x90, 0x18, 0x4b, 0xeb,
    0x6e, 0xc8, 0xf6, 0x4e, 0x7b, 0x66, 0x78, 0x0e, 0xe0, 0x77, 0x5a, 0xae,
    0x6e, 0x42, 0xb7, 0x46, 0xcb, 0xf9, 0xdd, 0x96, 0x03, 0xb8, 0x54, 0x33,
    0x78, 0x52, 0xe5, 0xe5, 0xab, 0x0f, 0x6c, 0xdc, 0xb9, 0x32, 0xf7, 0x95,
    0xea, 0xcc, 0x07, 0xab, 0x9d, 0xd0, 0xc9, 0x32, 0x80, 0x50, 0xbd, 0x06,
    0xac, 0x08, 0x4c, 0x20, 0x1e, 0x36, 0x88, 0x76, 0x85, 0x8d, 0xcd, 0xe7,
    0x0b, 0x7d, 0xa0, 0xe2, 0x38, 0x66, 0xfc, 0x2e, 0x74, 0x37, 0x7c, 0x8b,
    0xbe, 0x1f, 0xe7, 0x8f, 0x9a, 0xcb, 0x2d, 0xc7, 0x8a, 0x90, 0xed, 0x59,
    0x3c, 0x81, 0x4c, 0x5b, 0x6c, 0x26, 0x1c, 0x06, 0xed, 0x79, 0x09, 0x81,
    0x58, 0x06, 0x43, 0xc9, 0x8b, 0xe5, 0x2f, 0xa1, 0xc3, 0xc0, 0xfe, 0x5b,
    0x8b, 0x1d, 0x01, 0x75, 0xf0, 0xae, 0x56, 0xa8, 0xde, 0x84, 0xb5, 0xf4,
    0xb7, 0xb4, 0x19, 0x80, 0x1e, 0x41, 0xd3, 0xb7, 0x1c, 0xbf, 0x0e, 0x9d,
    0x7b, 0xbf, 0xee, 0x82, 0x1a, 0x44, 0x1f, 0x2d, 0xa7, 0xb7, 0xdb, 0x8a,
    0xcc, 0x92, 0x7d, 0x83, 0x6e, 0xfa, 0x59, 0x75, 0x4d, 0x5b, 0x79, 0xd6,
    0x52, 0xfe, 0x3a, 0x85, 0x2c, 0x01, 0x78, 0x5b, 0xb1, 0x8a, 0x8e, 0x84,
    0x46, 0xcd, 0x22, 0x25, 0xe1, 0xb0, 0x19, 0x29, 0xef, 0x71, 0xa4, 0x00,
    0xec, 0x48, 0xd0, 0xfd, 0xbf, 0x8d, 0x24, 0x48, 0x69, 0x9a, 0xe7, 0x3e,
    0xb8, 0xb8, 0x15, 0x29, 0xbd, 0xe0, 0x48, 0x83, 0x23, 0x43, 0x50, 0x99,
    0xca, 0xf3, 0x52, 0x43, 0x92, 0x0a, 0x67, 0x87, 0x28, 0x34, 0x52, 0xff,
    0xa0, 0xc2, 0xf5, 0x5b, 0x86, 0xf2, 0x4e, 0xe8, 0xc0, 0x52, 0xa9, 0x81,
    0xfe, 0xb3, 0x5d, 0x2e, 0xe1, 0x7f, 0xd1, 0x78, 0xd1, 0x56, 0xdb, 0x5d,
    0x41, 0xb0, 0x30, 0x81, 0x37, 0x1d, 0x99, 0xe9, 0xff, 0x02, 0x64, 0x40,
    0xb2, 0xca, 0x98, 0x3b, 0x79, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45,
    0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image8_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x20,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x73, 0x7a, 0x7a, 0xf4, 0x00, 0x00, 0x06,
    0x95, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0xbd, 0x97, 0x4f, 0x68, 0x1c,
    0xd7, 0x1d, 0xc7, 0x3f, 0x6b, 0xc6, 0xf0, 0x06, 0x46, 0x30, 0x03, 0x6b,
    0x98, 0x07, 0x2a, 0xec, 0x14, 0x19, 0xbc, 0x22, 0x86, 0xc8, 0xc5, 0x07,
    0xc9, 0x2d, 0xd4, 0xa2, 0x86, 0x46, 0xa9, 0x0f, 0x95, 0xe8, 0x21, 0x5b,
    0xe9, 0x10, 0xab, 0x0d, 0xc4, 0x8e, 0x03, 0xb1, 0x85, 0x0f, 0xae, 0x28,
    0x34, 0xae, 0x5d, 0x68, 0x15, 0x07, 0x8c, 0x95, 0x42, 0x88, 0xc8, 0x21,
    0xb6, 0x0a, 0x05, 0x2b, 0x07, 0xd7, 0xdb, 0x43, 0x60, 0x75, 0x10, 0xd9,
    0x35, 0x38, 0x68, 0x0d, 0x0a, 0x19, 0x43, 0x05, 0x23, 0xa8, 0x60, 0xe6,
    0xb0, 0x64, 0x1e, 0x78, 0x60, 0x5e, 0xf1, 0xc2, 0xf6, 0x30, 0x23, 0x69,
    0xa5, 0xb5, 0xfc, 0x27, 0x29, 0xfd, 0x5d, 0x66, 0xdf, 0xdb, 0x37, 0xf3,
    0xfb, 0x7e, 0xbf, 0xbf, 0xef, 0xfc, 0xde, 0x9b, 0x42, 0xbd, 0x5e, 0xe7,
    0xfb, 0xc6, 0xad, 0x0b, 0x95, 0x8e, 0x14, 0xa0, 0x00, 0xd7, 0x90, 0x44,
    0x3a, 0x84, 0x44, 0x33, 0xf1, 0xd1, 0x52, 0xe1, 0x79, 0xf7, 0x16, 0xbe,
    0x2b, 0x80, 0x5b, 0x97, 0x2a, 0x1d, 0x59, 0x74, 0x90, 0x87, 0x6d, 0x86,
    0x06, 0x24, 0x1c, 0xb2, 0xf1, 0x5c, 0x07, 0xd5, 0x06, 0x81, 0x60, 0xb5,
    0x19, 0xa0, 0xd7, 0x03, 0x1a, 0x6b, 0x01, 0x13, 0xd7, 0x16, 0xf7, 0x05,
    0xf2, 0xd2, 0x00, 0xee, 0x5d, 0xaa, 0x74, 0x64, 0x59, 0x32, 0x76, 0x6a,
    0x08, 0xfa, 0x35, 0xde, 0x2b, 0x23, 0x80, 0x86, 0xbe, 0x12, 0x3c, 0x51,
    0x80, 0xa4, 0xfe, 0xd0, 0x05, 0x06, 0x09, 0xa3, 0x18, 0x47, 0xd7, 0x08,
    0x1a, 0xf3, 0xf8, 0x2b, 0x01, 0x13, 0x37, 0x7a, 0x81, 0xbc, 0x30, 0x80,
    0xb9, 0xb7, 0xc6, 0x3b, 0x63, 0x47, 0x25, 0xc3, 0xbf, 0xf0, 0x18, 0x3c,
    0xe9, 0x71, 0xa7, 0x15, 0x53, 0x4b, 0x34, 0xb3, 0x96, 0x44, 0x96, 0x86,
    0xa0, 0xad, 0x80, 0x12, 0xf3, 0xff, 0x3c, 0xc6, 0xf0, 0x51, 0x89, 0xb0,
    0xc1, 0x31, 0xa0, 0xfa, 0x15, 0x8c, 0x0e, 0x7c, 0xc3, 0x37, 0xcb, 0x1f,
    0x50, 0xfd, 0xac, 0xc6, 0xe4, 0xf5, 0xdd, 0x20, 0x8c, 0x17, 0x49, 0x7e,
    0xe7, 0xf2, 0x74, 0xe7, 0x77, 0x53, 0x65, 0x8e, 0x9d, 0xf2, 0xa0, 0x28,
    0xb9, 0xbd, 0xee, 0x23, 0x8f, 0x9c, 0x63, 0xa2, 0x15, 0x22, 0x8d, 0x00,
    0x92, 0x10, 0x6c, 0x49, 0xbc, 0xae, 0x10, 0xa6, 0x24, 0x50, 0xe0, 0x24,
    0xd0, 0xd4, 0xe0, 0x5a, 0x10, 0xb7, 0x4c, 0x5e, 0x3f, 0x7b, 0x11, 0xad,
    0xe1, 0xd6, 0x5b, 0xe3, 0x9d, 0xc9, 0x8f, 0x77, 0xbc, 0xf1, 0x5c, 0x00,
    0xb7, 0x2e, 0x57, 0x3a, 0xb3, 0x53, 0x83, 0xd8, 0xc7, 0x6d, 0x6e, 0x27,
    0x01, 0xb5, 0x47, 0x11, 0xe5, 0xfe, 0x93, 0x08, 0x1d, 0x13, 0x10, 0xe0,
    0x2b, 0xc5, 0xea, 0xa6, 0xcf, 0x6c, 0xb1, 0x8c, 0x37, 0x30, 0x8c, 0x1b,
    0xd5, 0xa8, 0x3e, 0x18, 0x45, 0x03, 0xc2, 0x00, 0x9d, 0xc0, 0xec, 0xe9,
    0x18, 0x50, 0x4c, 0x5c, 0x98, 0x26, 0x78, 0xe8, 0xef, 0x7a, 0xfe, 0x81,
    0x67, 0x32, 0xff, 0x7d, 0xa5, 0x33, 0xf7, 0xee, 0x08, 0x72, 0xd8, 0x65,
    0xa9, 0xa5, 0x98, 0x6d, 0x69, 0x64, 0xff, 0x30, 0x51, 0x12, 0xe1, 0x27,
    0x3e, 0x4a, 0x6b, 0x42, 0x61, 0xe3, 0x69, 0x81, 0x57, 0x2c, 0x43, 0x3b,
    0x62, 0x74, 0x00, 0xfc, 0x4d, 0x50, 0x0a, 0xfc, 0x0d, 0xf0, 0x13, 0x98,
    0xfd, 0xfc, 0x18, 0x69, 0xec, 0x02, 0x92, 0x89, 0x37, 0xc6, 0x99, 0x3b,
    0x33, 0xd6, 0x79, 0xae, 0x02, 0xf7, 0xde, 0xaf, 0x74, 0xae, 0xbc, 0xe9,
    0x61, 0x96, 0x34, 0x00, 0x23, 0x06, 0x0c, 0xa2, 0x58, 0x5a, 0x5f, 0xc4,
    0xb6, 0x6c, 0x68, 0x81, 0xb0, 0x04, 0x23, 0x0a, 0x66, 0x5f, 0x1d, 0x05,
    0x23, 0x86, 0xa4, 0xcc, 0xe4, 0xa7, 0xc3, 0x68, 0x20, 0x4e, 0xb2, 0xe7,
    0x08, 0x9d, 0xa2, 0x31, 0x69, 0x6e, 0x44, 0x8c, 0x38, 0x2e, 0xf6, 0x2b,
    0x92, 0xf2, 0x80, 0xdc, 0xce, 0xf3, 0x54, 0x00, 0x9f, 0x5c, 0xaa, 0x74,
    0xe6, 0x2e, 0x78, 0x98, 0xfd, 0x26, 0x18, 0x36, 0x24, 0x0a, 0xcf, 0x2d,
    0xf3, 0x97, 0x36, 0xfc, 0xa8, 0x55, 0x83, 0xc7, 0x20, 0xfa, 0x04, 0xfa,
    0xdf, 0x70, 0xd1, 0x1b, 0x07, 0x43, 0x80, 0x70, 0x20, 0xda, 0xc0, 0x13,
    0x26, 0x41, 0x0b, 0xb0, 0xa1, 0x6c, 0xa5, 0xdc, 0x9c, 0x6a, 0x60, 0x8a,
    0x18, 0x0e, 0x79, 0x80, 0xc2, 0xf9, 0x41, 0x19, 0x29, 0xed, 0x67, 0x97,
    0x60, 0xf6, 0x94, 0x83, 0xb3, 0x16, 0x40, 0x3b, 0x05, 0x1d, 0x81, 0x25,
    0x20, 0x09, 0x51, 0x22, 0x45, 0x3f, 0xd6, 0x68, 0xad, 0x51, 0xa1, 0x42,
    0x6b, 0xc5, 0x3b, 0xff, 0x5a, 0x02, 0x0d, 0x24, 0x31, 0xf4, 0xa7, 0x5c,
    0xfc, 0xe5, 0x3c, 0xd3, 0x47, 0x42, 0x50, 0x29, 0xc2, 0xd0, 0x98, 0x76,
    0xb8, 0x9d, 0x1c, 0x6c, 0x40, 0x51, 0x2a, 0x3a, 0xfb, 0x03, 0xf8, 0xf6,
    0xf3, 0xe9, 0x8e, 0x37, 0x00, 0x18, 0xe7, 0xc0, 0x07, 0x92, 0x14, 0x9a,
    0x21, 0x18, 0x36, 0xf5, 0x96, 0xa2, 0x64, 0xd8, 0x5c, 0xe9, 0x1b, 0xe2,
    0x1f, 0x87, 0x2b, 0x8c, 0x89, 0x12, 0x1a, 0xa8, 0x6f, 0xfa, 0x60, 0x49,
    0x50, 0x20, 0x07, 0x6c, 0xce, 0x4d, 0x2d, 0x71, 0xef, 0xbd, 0x06, 0x33,
    0x27, 0x6b, 0xd0, 0x27, 0xe1, 0x49, 0x98, 0x27, 0x07, 0x70, 0xd1, 0x5d,
    0xba, 0xef, 0x2a, 0xc1, 0x27, 0x97, 0x2b, 0x9d, 0x3f, 0x9e, 0x35, 0xc1,
    0x02, 0xfa, 0xca, 0xb0, 0x06, 0x3c, 0xf2, 0x61, 0x53, 0x93, 0xde, 0x5f,
    0x66, 0xe6, 0xed, 0x21, 0x7e, 0x1d, 0x79, 0xc8, 0x7e, 0x17, 0x30, 0x79,
    0xbd, 0x34, 0x4d, 0xd8, 0x0a, 0x91, 0xae, 0x03, 0x2a, 0x00, 0xcb, 0xcb,
    0xdc, 0x67, 0xb9, 0x38, 0xfd, 0x01, 0xce, 0x61, 0x17, 0xd2, 0x18, 0xcc,
    0x1c, 0xc4, 0x41, 0x0f, 0x88, 0x70, 0xda, 0xe9, 0xd3, 0x15, 0x18, 0x2f,
    0x83, 0x8c, 0x6d, 0x58, 0xd6, 0xb0, 0xd2, 0x00, 0xad, 0xa1, 0x38, 0x02,
    0xb6, 0xc4, 0x0c, 0x80, 0x36, 0xc8, 0x52, 0x39, 0x93, 0xdc, 0xb0, 0xa1,
    0xad, 0x90, 0xa5, 0x41, 0x68, 0x8b, 0x4c, 0x01, 0x1d, 0x82, 0xb0, 0xb3,
    0xb2, 0x19, 0x2e, 0x3c, 0x56, 0x60, 0x3a, 0xf0, 0x24, 0x86, 0x83, 0x12,
    0x88, 0x00, 0x9b, 0x40, 0xa9, 0x5e, 0x05, 0x6e, 0x5e, 0x1a, 0xef, 0xdc,
    0x7e, 0x4d, 0xc0, 0x15, 0x1f, 0xda, 0x36, 0x18, 0x0b, 0x99, 0xb9, 0xda,
    0x1a, 0x14, 0xc4, 0xbf, 0x72, 0x70, 0x2c, 0x72, 0xa6, 0x76, 0x96, 0xcc,
    0x32, 0xf3, 0xb1, 0x9b, 0x35, 0xa3, 0xdc, 0x2b, 0xd8, 0x1e, 0x24, 0x51,
    0x36, 0xff, 0x38, 0x84, 0x3e, 0x6f, 0x5b, 0x81, 0x38, 0x68, 0x20, 0x12,
    0xdd, 0xab, 0xc0, 0xf4, 0xb0, 0x07, 0x43, 0x26, 0xbc, 0x6d, 0x43, 0xb2,
    0x01, 0x9b, 0x11, 0x6c, 0x6c, 0x80, 0xa5, 0xe1, 0xb4, 0xc0, 0x39, 0x5d,
    0xce, 0x7c, 0x24, 0x64, 0xa6, 0x8c, 0x70, 0x20, 0x21, 0x4b, 0xa2, 0x55,
    0xd7, 0x58, 0x66, 0xc9, 0x85, 0x9d, 0xcd, 0xf7, 0x49, 0x48, 0x43, 0x38,
    0x98, 0x19, 0x4f, 0xb4, 0x34, 0xcd, 0x30, 0xee, 0x05, 0xe0, 0x16, 0x43,
    0x10, 0xc0, 0x4f, 0x4c, 0x78, 0xc3, 0xdd, 0x5e, 0x90, 0x26, 0x1a, 0xce,
    0x0f, 0x42, 0xbf, 0xce, 0xf4, 0x4a, 0xf2, 0x75, 0x49, 0x2e, 0x77, 0x12,
    0xed, 0x8c, 0x2d, 0x67, 0xcf, 0xbc, 0x9d, 0x29, 0x60, 0x3a, 0xb9, 0x11,
    0x35, 0x7e, 0xb3, 0x46, 0xd0, 0x7a, 0x8a, 0x02, 0x83, 0x9e, 0x99, 0x39,
    0xde, 0x70, 0x33, 0x13, 0x02, 0xfc, 0xdc, 0xc5, 0x14, 0x02, 0x56, 0xc2,
    0x9c, 0xa9, 0xce, 0xe4, 0x4f, 0xb6, 0x94, 0xd8, 0x4a, 0xb6, 0xc5, 0x3c,
    0xcc, 0x95, 0x50, 0x79, 0x59, 0x72, 0x10, 0x69, 0xee, 0x81, 0xc7, 0x01,
    0x3a, 0xd2, 0xbd, 0x00, 0xbe, 0xfc, 0x73, 0xa5, 0x83, 0x41, 0xc6, 0x44,
    0x47, 0xb0, 0x09, 0x29, 0xc0, 0x59, 0x49, 0xfa, 0x9e, 0x07, 0xb6, 0x00,
    0xb5, 0xc5, 0x34, 0xbf, 0xea, 0x2e, 0x25, 0x2c, 0xbb, 0x4b, 0x99, 0x38,
    0x1f, 0x77, 0x95, 0xc1, 0x74, 0x80, 0x98, 0x74, 0xc3, 0xa7, 0xf9, 0x68,
    0x95, 0xf9, 0xbf, 0xd7, 0x0a, 0xbb, 0x00, 0xd0, 0x07, 0x14, 0xdd, 0x8c,
    0x89, 0x01, 0x1c, 0x01, 0xf3, 0x7c, 0x09, 0x84, 0xc0, 0x1c, 0xb6, 0xa1,
    0x2c, 0xba, 0x98, 0xba, 0x7b, 0x3c, 0xd0, 0x5d, 0x73, 0x76, 0x97, 0x41,
    0xab, 0x5c, 0x81, 0x10, 0x70, 0x88, 0x1a, 0x0d, 0x82, 0x60, 0x87, 0xfd,
    0x36, 0x00, 0x69, 0x99, 0xd9, 0x62, 0x0b, 0x68, 0xa5, 0x70, 0xca, 0x81,
    0xd3, 0x4e, 0xc6, 0x48, 0xe9, 0xae, 0x9a, 0xb3, 0xa7, 0xe6, 0x7b, 0xe7,
    0x9d, 0x9d, 0xf1, 0x56, 0xf2, 0x24, 0x02, 0x53, 0x12, 0x37, 0x6b, 0x04,
    0x5f, 0x07, 0x4c, 0x5c, 0xaf, 0x16, 0x7a, 0x00, 0x68, 0x43, 0x64, 0x32,
    0x6f, 0x31, 0x52, 0x5b, 0xe5, 0xc8, 0x99, 0xb6, 0x4d, 0xe8, 0x1f, 0xc9,
    0xd8, 0x5b, 0x6e, 0x17, 0x73, 0x9d, 0x79, 0x61, 0x4b, 0x99, 0x24, 0xcc,
    0xbd, 0xc1, 0x4e, 0xf2, 0xfc, 0x55, 0xd4, 0xbe, 0xcf, 0x1d, 0x3f, 0x64,
    0x6f, 0x1c, 0x80, 0xbc, 0x49, 0xb6, 0xc5, 0x6e, 0xa6, 0x39, 0xf3, 0xb4,
    0x15, 0x12, 0x3c, 0x88, 0x99, 0xff, 0xd3, 0x12, 0xc1, 0xf2, 0x46, 0xd6,
    0x17, 0x76, 0x29, 0xb2, 0xe7, 0x6d, 0xd0, 0xe1, 0x8e, 0x12, 0x56, 0xde,
    0x94, 0xbe, 0xae, 0x53, 0xbf, 0x5f, 0x67, 0xf2, 0xfd, 0x6a, 0xcf, 0x91,
    0xec, 0x00, 0x40, 0x90, 0x68, 0xb0, 0x8f, 0x41, 0x9b, 0x4c, 0x56, 0x9d,
    0x66, 0xc8, 0x15, 0xf8, 0x6b, 0x9a, 0x89, 0x0f, 0x9b, 0x1c, 0x7b, 0x73,
    0xa1, 0x10, 0x1d, 0x9d, 0x2d, 0xa4, 0x1b, 0x3a, 0x07, 0x91, 0x33, 0x2d,
    0x4a, 0x30, 0x74, 0xd6, 0x7c, 0x34, 0x5d, 0xc9, 0x65, 0x56, 0x86, 0xf5,
    0x80, 0xd5, 0xe5, 0x65, 0xaa, 0x2b, 0x6a, 0x6f, 0xee, 0x1d, 0x00, 0x27,
    0x7e, 0xbb, 0x50, 0x20, 0x49, 0xa1, 0xe8, 0xe4, 0xb2, 0x92, 0x21, 0x8f,
    0x61, 0xe6, 0x6f, 0x01, 0xf3, 0x8b, 0x3b, 0xae, 0x6d, 0xae, 0x35, 0xbb,
    0x98, 0x0a, 0xd2, 0x8d, 0x00, 0xa2, 0x10, 0x5a, 0x01, 0x14, 0xbd, 0x6c,
    0x07, 0xb5, 0x04, 0x44, 0x01, 0x3c, 0xac, 0x53, 0xbf, 0x7b, 0x9b, 0xab,
    0x77, 0x43, 0x7e, 0xf3, 0x51, 0x2f, 0x7b, 0xe8, 0x6a, 0xc5, 0x69, 0x0b,
    0xcc, 0xd2, 0x30, 0xa8, 0x6a, 0x56, 0xd3, 0x22, 0xd4, 0x1a, 0x31, 0x57,
    0x3f, 0xae, 0xed, 0xba, 0xb1, 0xec, 0x7a, 0xdb, 0x7b, 0x41, 0xbc, 0xd2,
    0x64, 0xe1, 0x6e, 0xc0, 0xf2, 0xba, 0xa2, 0x64, 0xdb, 0x78, 0x65, 0x87,
    0x89, 0x1f, 0x0f, 0x21, 0xda, 0x21, 0xb1, 0x52, 0x54, 0xbf, 0x0a, 0xa9,
    0x36, 0x14, 0x57, 0x17, 0x6b, 0xfb, 0x1e, 0xcb, 0xb7, 0x01, 0x2c, 0xde,
    0xad, 0x32, 0xfd, 0x87, 0x73, 0xa0, 0x06, 0x41, 0xad, 0x66, 0x20, 0x92,
    0xde, 0x1b, 0x84, 0x13, 0x83, 0x90, 0x84, 0x0f, 0x9a, 0xbc, 0xf3, 0x57,
    0x9f, 0x99, 0x1b, 0xd5, 0xc2, 0x89, 0xae, 0xff, 0xa3, 0xae, 0xdf, 0x27,
    0x86, 0xe1, 0xc4, 0xf9, 0xfd, 0x52, 0x67, 0xb1, 0xd3, 0x09, 0xa7, 0x16,
    0x0b, 0xe9, 0x17, 0xcb, 0xf0, 0xea, 0x19, 0xb0, 0xca, 0x60, 0xc0, 0xd0,
    0xc0, 0xee, 0xc5, 0xa5, 0xc6, 0x74, 0xc7, 0x2c, 0x79, 0xd0, 0xd2, 0xd4,
    0xee, 0x87, 0xcc, 0xdc, 0x78, 0xba, 0xac, 0x2f, 0x13, 0xbb, 0xce, 0x03,
    0x33, 0x9f, 0xd6, 0x99, 0x3b, 0x64, 0x63, 0xfe, 0xf4, 0x22, 0xac, 0x2f,
    0xe1, 0x18, 0x4d, 0x4a, 0xcd, 0x4a, 0x47, 0x68, 0x13, 0x6c, 0x70, 0x8e,
    0xe7, 0xbb, 0xa0, 0xd2, 0xfc, 0x70, 0x6a, 0xff, 0xaf, 0x9d, 0x97, 0x89,
    0x9e, 0x0f, 0x93, 0x2f, 0xaf, 0x8d, 0x75, 0x66, 0xce, 0x8c, 0xc0, 0xcf,
    0xce, 0x00, 0x0a, 0x74, 0x0c, 0x9b, 0xcd, 0x6c, 0x6b, 0x26, 0x73, 0xff,
    0xea, 0x67, 0x55, 0xfe, 0xf3, 0xda, 0xc2, 0xff, 0x04, 0x40, 0xcf, 0x91,
    0xec, 0xc4, 0xe5, 0x6a, 0x61, 0xe2, 0x5a, 0x8d, 0xfa, 0x87, 0x33, 0xf0,
    0xb0, 0x9a, 0x9d, 0x70, 0x4a, 0x63, 0x60, 0x97, 0x41, 0x48, 0xe2, 0x87,
    0x75, 0x3e, 0xf8, 0xa2, 0xb7, 0xa1, 0x7c, 0xd7, 0x78, 0xe6, 0xa7, 0xd9,
    0xcd, 0x0b, 0xa3, 0x9d, 0xf1, 0xe3, 0x36, 0xd2, 0x15, 0x94, 0x8b, 0x1e,
    0xf5, 0x75, 0x9f, 0xea, 0x8a, 0x66, 0xf2, 0xfa, 0xf7, 0xaf, 0xfd, 0x0b,
    0x01, 0xf8, 0x7f, 0xc4, 0x7f, 0x01, 0x56, 0xc4, 0x0b, 0xe1, 0x70, 0x13,
    0x9d, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42,
    0x60, 0x82
};

static const unsigned char image9_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x1f, 0xf3, 0xff, 0x61, 0x00, 0x00, 0x02,
    0x46, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0xa5, 0x93, 0x41, 0x48, 0x14,
    0x71, 0x14, 0xc6, 0x7f, 0x53, 0x13, 0xce, 0x80, 0xd2, 0x2e, 0x14, 0xcc,
    0xc0, 0x1e, 0x76, 0x41, 0xa1, 0x15, 0x3a, 0x08, 0x79, 0x68, 0x3c, 0xad,
    0x5d, 0xca, 0xdb, 0x1a, 0x04, 0x95, 0x04, 0x21, 0x74, 0x68, 0xf3, 0x52,
    0x76, 0x08, 0x25, 0x22, 0x3a, 0xae, 0x9e, 0x76, 0xeb, 0x92, 0x1d, 0xc2,
    0xb6, 0x93, 0x0a, 0x49, 0x1a, 0x08, 0x7a, 0x08, 0x66, 0x4f, 0xda, 0x21,
    0xd8, 0xbd, 0x2c, 0xcc, 0x82, 0xc1, 0x0c, 0x39, 0x30, 0xff, 0x6c, 0x6a,
    0xfe, 0xc4, 0xc0, 0x74, 0x58, 0x4b, 0x29, 0x91, 0xa0, 0xef, 0xf2, 0x78,
    0x0f, 0xde, 0xf7, 0xde, 0xfb, 0xde, 0x7b, 0x8a, 0x6d, 0xdb, 0xfc, 0x0f,
    0xd4, 0xc3, 0x82, 0x5d, 0x4b, 0xe3, 0x89, 0x48, 0xe5, 0x31, 0xb2, 0x39,
    0x74, 0x5d, 0x23, 0xda, 0x71, 0xf1, 0x5a, 0x75, 0xf4, 0xe2, 0x9c, 0x72,
    0x24, 0x41, 0xd7, 0xda, 0xbd, 0x24, 0x5f, 0x9c, 0xa2, 0x7e, 0x73, 0x13,
    0xc3, 0xd0, 0x11, 0x12, 0x72, 0x26, 0xe8, 0x40, 0xff, 0x8e, 0x0b, 0x7e,
    0x33, 0xb1, 0x97, 0x66, 0x50, 0x0a, 0xd3, 0xca, 0x5f, 0x04, 0x59, 0x6f,
    0x3e, 0x31, 0x1f, 0xbe, 0x05, 0xd2, 0x54, 0x97, 0xc1, 0xf5, 0x40, 0xf8,
    0xf0, 0xbc, 0xb7, 0x81, 0xd5, 0xaa, 0x41, 0x26, 0x07, 0x7e, 0x80, 0x35,
    0x51, 0xc1, 0x7d, 0x57, 0x4e, 0xda, 0x99, 0x31, 0x05, 0xe0, 0x18, 0xc0,
    0xc9, 0xfa, 0x54, 0xb2, 0xf5, 0xb1, 0xcd, 0x93, 0x2b, 0x43, 0x38, 0x2f,
    0xc7, 0x19, 0xe9, 0x75, 0xc8, 0x1b, 0x30, 0x90, 0x09, 0x18, 0x38, 0x25,
    0x60, 0x7b, 0x11, 0x9a, 0x55, 0xf8, 0x30, 0x03, 0xbe, 0x83, 0x79, 0xf1,
    0x3a, 0x5d, 0x1b, 0x53, 0x09, 0x80, 0xb2, 0xf9, 0x20, 0x9b, 0xa4, 0xcf,
    0x58, 0x78, 0x7d, 0x77, 0x14, 0x80, 0xf9, 0x5b, 0x56, 0x52, 0x7d, 0x53,
    0x01, 0xcd, 0x80, 0x58, 0x76, 0xda, 0x13, 0x0e, 0x48, 0x40, 0x0a, 0x48,
    0xe5, 0x21, 0x73, 0x1e, 0xda, 0x2b, 0x4c, 0xde, 0xbe, 0x8f, 0x6a, 0x0e,
    0x5a, 0x98, 0xe7, 0x2c, 0xdc, 0x67, 0xa5, 0x24, 0x10, 0x2e, 0xa5, 0x89,
    0x02, 0xc4, 0x11, 0x84, 0x0e, 0xc4, 0x02, 0xe2, 0x03, 0xc3, 0xaa, 0x11,
    0x84, 0x73, 0x80, 0x0d, 0x38, 0x14, 0xfa, 0x52, 0xa8, 0x04, 0x0e, 0x18,
    0xc3, 0x58, 0x13, 0xa3, 0x10, 0xee, 0x25, 0x84, 0x4e, 0xa7, 0x1a, 0x80,
    0x94, 0xfb, 0x36, 0x06, 0x52, 0x0e, 0xa8, 0x1a, 0xc4, 0x4d, 0xd2, 0x29,
    0x38, 0xce, 0x67, 0xff, 0xd1, 0x59, 0xd5, 0xa5, 0xa7, 0x47, 0xed, 0x28,
    0x22, 0x43, 0x08, 0x7d, 0xf8, 0x11, 0x42, 0xe8, 0x76, 0xfc, 0x5d, 0x1f,
    0xbe, 0xf9, 0xb0, 0xeb, 0xc2, 0xf7, 0xd3, 0x44, 0x0e, 0x9c, 0xd8, 0x16,
    0x6c, 0xb7, 0x42, 0x94, 0x5f, 0x87, 0x34, 0x7f, 0xd7, 0x4a, 0x4a, 0xc5,
    0x3c, 0xfd, 0x83, 0xb9, 0x4e, 0xc5, 0x30, 0xe8, 0x68, 0x10, 0x05, 0x10,
    0x4a, 0x88, 0x25, 0x0d, 0x34, 0x44, 0xa1, 0x4c, 0xaa, 0xdb, 0x24, 0xbd,
    0x7c, 0x19, 0x7b, 0x55, 0xec, 0xaf, 0x71, 0x6c, 0xd6, 0x56, 0xbe, 0x00,
    0xeb, 0xaf, 0x47, 0x93, 0xe1, 0x4b, 0xb9, 0x4e, 0xbb, 0x91, 0x04, 0x4c,
    0x22, 0xd3, 0x42, 0xff, 0xba, 0xc5, 0x4a, 0x58, 0xa7, 0x66, 0xd4, 0x40,
    0xd5, 0x18, 0x51, 0x25, 0xda, 0xa7, 0xbd, 0x35, 0x1e, 0x84, 0x7e, 0x75,
    0x51, 0x69, 0xd4, 0x1d, 0x40, 0x40, 0x18, 0xd1, 0xf0, 0x4a, 0x88, 0x4c,
    0x19, 0x27, 0x7e, 0x85, 0x25, 0x34, 0x72, 0xa2, 0x41, 0x4e, 0x36, 0x31,
    0x5b, 0x92, 0x0b, 0x4f, 0x6d, 0xe5, 0xd0, 0x53, 0x7e, 0xb1, 0xea, 0x51,
    0xce, 0x6a, 0xa0, 0x4a, 0x44, 0xcb, 0xc4, 0x8b, 0x21, 0x68, 0x99, 0x8c,
    0x74, 0xc3, 0xc2, 0x92, 0x07, 0x12, 0xa6, 0xd7, 0x80, 0x22, 0xfb, 0x1a,
    0xfc, 0x89, 0xc6, 0x63, 0x2b, 0xb9, 0x56, 0xd0, 0x20, 0xce, 0x23, 0xb3,
    0xe3, 0xd0, 0x5a, 0x20, 0xad, 0x6e, 0x10, 0x09, 0xa8, 0xbe, 0x87, 0xa1,
    0x59, 0x5b, 0x81, 0x23, 0x08, 0x00, 0x2a, 0x37, 0xac, 0x64, 0x20, 0x03,
    0x69, 0x0d, 0x52, 0x1a, 0x78, 0x02, 0xd6, 0xdb, 0x30, 0x59, 0xb3, 0x7f,
    0xff, 0xc2, 0x91, 0x04, 0xff, 0x82, 0x9f, 0x65, 0xaa, 0xfe, 0x0b, 0xa2,
    0x3a, 0xa7, 0x2b, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae,
    0x42, 0x60, 0x82
};

static const unsigned char image10_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x20,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x73, 0x7a, 0x7a, 0xf4, 0x00, 0x00, 0x04,
    0xdf, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0xc5, 0x97, 0x4f, 0x68, 0x14,
    0x57, 0x1c, 0xc7, 0x3f, 0x1b, 0x46, 0x7c, 0x03, 0x5b, 0x3a, 0x03, 0x5b,
    0xd8, 0x11, 0x0f, 0xae, 0xe4, 0x90, 0x09, 0x0a, 0x66, 0x4f, 0xcd, 0x82,
    0x87, 0xa4, 0x50, 0x68, 0xda, 0x0a, 0x8d, 0xb4, 0x87, 0xb4, 0x14, 0x6a,
    0xbc, 0xa8, 0xa5, 0x87, 0xda, 0x7a, 0x68, 0x8b, 0x50, 0x69, 0x3d, 0xb4,
    0x85, 0x82, 0x34, 0x2d, 0x28, 0xe2, 0xa1, 0x35, 0x9e, 0xdc, 0x42, 0xc5,
    0x55, 0x0c, 0x4e, 0x42, 0x03, 0x93, 0x82, 0xb2, 0x7b, 0xb0, 0x38, 0x42,
    0x8b, 0x13, 0x30, 0x38, 0x7b, 0x58, 0xd8, 0x81, 0x2e, 0xcc, 0x83, 0x0c,
    0xbc, 0x1e, 0x66, 0x76, 0xd7, 0x35, 0xd1, 0xac, 0x95, 0xa5, 0x3f, 0x58,
    0x7e, 0xc3, 0xcc, 0x7b, 0xef, 0xf7, 0xfd, 0xfe, 0xfe, 0xbe, 0xcd, 0xb8,
    0xae, 0xcb, 0x20, 0x65, 0xf6, 0x9c, 0x52, 0x00, 0x91, 0x10, 0xc8, 0x18,
    0x4c, 0x29, 0x89, 0xfe, 0x09, 0x98, 0x3f, 0xb1, 0x23, 0x03, 0x30, 0x34,
    0x50, 0xeb, 0x40, 0x04, 0x8c, 0xbf, 0x36, 0xc6, 0xd5, 0x2f, 0x8b, 0x04,
    0x67, 0x8b, 0x7c, 0x7e, 0xc4, 0x46, 0xb7, 0x2c, 0xa6, 0x4f, 0xdd, 0x57,
    0x03, 0x07, 0x30, 0xf3, 0x53, 0xa4, 0xf4, 0x61, 0x9b, 0xef, 0xde, 0xd0,
    0x29, 0x18, 0x10, 0xad, 0xc3, 0xbb, 0xe3, 0x26, 0xc7, 0x3f, 0x18, 0x43,
    0x08, 0x03, 0x00, 0x6d, 0x90, 0x00, 0x40, 0x70, 0x68, 0xc2, 0x44, 0xc6,
    0x20, 0x63, 0x10, 0x5a, 0xa2, 0xf3, 0x39, 0x9d, 0x50, 0x37, 0x81, 0x01,
    0x7a, 0x60, 0xe6, 0xfb, 0x48, 0xe9, 0x3b, 0x2d, 0x0e, 0x8e, 0x24, 0x46,
    0xa1, 0xab, 0xc3, 0x16, 0x88, 0x48, 0x0e, 0x16, 0x80, 0x24, 0x62, 0x6a,
    0xa2, 0x40, 0x53, 0x42, 0x14, 0x43, 0x53, 0x26, 0x00, 0x42, 0x09, 0xe7,
    0x17, 0x9a, 0x10, 0x06, 0x83, 0x03, 0x30, 0x73, 0xfa, 0xa1, 0x12, 0xf9,
    0x51, 0x26, 0x76, 0x81, 0x04, 0xc2, 0x94, 0x79, 0x14, 0x83, 0xdf, 0x82,
    0xda, 0x72, 0x0d, 0xd9, 0xa8, 0x0d, 0x0e, 0x00, 0x08, 0x4a, 0xfb, 0xf3,
    0xe8, 0x1a, 0x48, 0x09, 0xa4, 0xcc, 0x65, 0x0c, 0x73, 0x57, 0x02, 0x44,
    0x23, 0xa0, 0x72, 0xf6, 0x60, 0x6f, 0x19, 0x1e, 0xbf, 0xa4, 0xd4, 0xe5,
    0x3b, 0x2f, 0xaa, 0xea, 0x5a, 0x5e, 0xfd, 0xb2, 0xb2, 0x5d, 0xcd, 0x9e,
    0x4c, 0xca, 0xe4, 0x59, 0x65, 0xe6, 0xd4, 0x43, 0x15, 0xbe, 0x64, 0x51,
    0x1a, 0xd6, 0x37, 0xb8, 0xdf, 0x0b, 0xc1, 0x59, 0xf2, 0x91, 0xa1, 0xd7,
    0x59, 0xaf, 0x01, 0x7c, 0x75, 0x65, 0xbb, 0xfa, 0xe1, 0xd3, 0x22, 0x66,
    0x36, 0x79, 0x39, 0x45, 0x81, 0xd9, 0xb7, 0x8a, 0x1c, 0x3e, 0x7a, 0x51,
    0xcd, 0x9d, 0xdc, 0x9d, 0x79, 0x16, 0x00, 0x32, 0x86, 0xb1, 0x97, 0x8b,
    0x88, 0xf4, 0x59, 0xc6, 0x20, 0x44, 0xa2, 0xcb, 0xb7, 0x22, 0xf0, 0x3d,
    0xe4, 0x6a, 0x19, 0x78, 0x1d, 0x80, 0xa1, 0xd9, 0x0b, 0x4a, 0x4d, 0xbc,
    0x59, 0xc4, 0x6f, 0x81, 0xbb, 0x06, 0x6e, 0x3d, 0xd1, 0xbe, 0x84, 0x99,
    0x8f, 0xa7, 0x99, 0x9c, 0xba, 0xdc, 0xb7, 0x27, 0xa6, 0x3f, 0xbb, 0xaf,
    0x30, 0x2d, 0x4a, 0x76, 0x17, 0x0c, 0x24, 0x61, 0x90, 0x12, 0xdc, 0xeb,
    0x35, 0x68, 0xf9, 0x38, 0x37, 0xce, 0x77, 0x48, 0x69, 0x22, 0x67, 0xe0,
    0x87, 0xe0, 0x87, 0xe9, 0xe2, 0xf4, 0x83, 0xdf, 0x04, 0xaf, 0xa1, 0x23,
    0x73, 0x76, 0xff, 0xf4, 0x63, 0x30, 0xf7, 0xd9, 0x18, 0x5a, 0xe2, 0x76,
    0x5d, 0xeb, 0xd6, 0x7f, 0xa5, 0x16, 0x21, 0x3d, 0x0f, 0x59, 0x77, 0x3b,
    0xec, 0x01, 0x34, 0x89, 0xce, 0xe2, 0x03, 0x12, 0x97, 0xa5, 0x87, 0x78,
    0xad, 0xee, 0x81, 0x18, 0x46, 0x7f, 0xec, 0x4f, 0xdc, 0x57, 0xd2, 0xb0,
    0x18, 0xdf, 0x6b, 0x12, 0x3e, 0xd2, 0x74, 0xcc, 0x54, 0x57, 0x97, 0x3c,
    0x68, 0x05, 0x38, 0x95, 0xaf, 0x7b, 0x42, 0xaa, 0x05, 0x9e, 0x4f, 0x98,
    0x2d, 0x24, 0xc6, 0x36, 0x93, 0x35, 0x1f, 0xd8, 0xb1, 0x25, 0x00, 0x29,
    0x25, 0x86, 0x5d, 0xe8, 0xc4, 0xbb, 0xcd, 0xbc, 0x19, 0x83, 0x57, 0x87,
    0x7a, 0xad, 0x06, 0x0d, 0x07, 0x78, 0xa5, 0x67, 0xdf, 0x90, 0x68, 0xf8,
    0x18, 0x61, 0x93, 0x7c, 0x16, 0xf2, 0x02, 0xf2, 0x59, 0x30, 0x52, 0x2d,
    0xfe, 0xac, 0x42, 0x7d, 0xa5, 0x2f, 0x0f, 0x88, 0xac, 0x81, 0xb5, 0x27,
    0x21, 0x12, 0xa5, 0xa5, 0x27, 0xd3, 0xec, 0x77, 0xae, 0x54, 0x11, 0xb2,
    0xb9, 0x81, 0x3d, 0xc0, 0x50, 0xf9, 0x9b, 0xd1, 0x0c, 0x0b, 0xf3, 0x88,
    0xbf, 0xef, 0x62, 0xe7, 0xa0, 0x60, 0x80, 0x9d, 0x03, 0xfe, 0x70, 0xe1,
    0xda, 0x3c, 0xae, 0xfb, 0xc9, 0x96, 0x55, 0x30, 0x75, 0xf4, 0xae, 0x92,
    0x76, 0x91, 0xc2, 0x0b, 0xdd, 0x7a, 0x6f, 0x97, 0x60, 0xad, 0x01, 0xf2,
    0xd6, 0x0a, 0xb2, 0xb1, 0xb8, 0xe9, 0x5e, 0x0d, 0xa0, 0xf2, 0x63, 0x31,
    0x33, 0x79, 0x60, 0x4e, 0x85, 0x0b, 0x16, 0x22, 0x6b, 0x11, 0xfe, 0x5d,
    0x45, 0xb6, 0xea, 0x7d, 0x19, 0x6f, 0x4b, 0x61, 0x5f, 0xa1, 0x27, 0xf6,
    0x6d, 0x7d, 0x77, 0xd9, 0x47, 0xb6, 0x9a, 0x38, 0x95, 0x2f, 0x36, 0x3d,
    0xab, 0x33, 0x0d, 0x9d, 0xdf, 0xde, 0x7b, 0x64, 0xc1, 0x68, 0xbf, 0x76,
    0x99, 0x3a, 0x54, 0x55, 0x8c, 0x8d, 0x23, 0xb4, 0x64, 0xdc, 0x46, 0xeb,
    0xa0, 0x6f, 0x4b, 0x8c, 0x47, 0xeb, 0x50, 0x5f, 0xa8, 0x40, 0xab, 0xc6,
    0xe3, 0xb1, 0x6f, 0xcb, 0xf3, 0xb7, 0x62, 0x4d, 0x20, 0xf6, 0x14, 0x91,
    0x74, 0xdb, 0x6e, 0x14, 0x01, 0xeb, 0xe0, 0x2d, 0xdd, 0x85, 0xb0, 0x89,
    0x53, 0x79, 0xb2, 0x27, 0x9f, 0x0b, 0xc0, 0xd4, 0xfb, 0x55, 0x25, 0x87,
    0x6d, 0x44, 0x36, 0x89, 0x79, 0x18, 0x43, 0x3d, 0xcd, 0x81, 0xa0, 0x05,
    0xe1, 0xad, 0x1a, 0xb2, 0xe5, 0x3d, 0xf5, 0x8c, 0xe7, 0x02, 0x20, 0xe3,
    0x08, 0xb1, 0x77, 0x2c, 0xe9, 0x78, 0x71, 0x92, 0x74, 0x90, 0x00, 0x09,
    0xee, 0x05, 0xb0, 0xea, 0xe1, 0xde, 0xf8, 0xf0, 0xa9, 0x79, 0xf4, 0x9f,
    0x6f, 0x44, 0x93, 0xd3, 0x37, 0x95, 0xd8, 0x53, 0x42, 0x0a, 0x3d, 0x29,
    0xb9, 0x76, 0xe2, 0x69, 0x49, 0x53, 0xab, 0x5f, 0xab, 0x20, 0x64, 0xb0,
    0xe5, 0x39, 0x1d, 0x00, 0xb3, 0xe7, 0x94, 0x32, 0x0c, 0x28, 0x64, 0x05,
    0xfe, 0x5a, 0x88, 0x7f, 0xc7, 0xa7, 0x7c, 0x66, 0xf4, 0x89, 0xe8, 0x05,
    0x02, 0xb1, 0x7f, 0x9c, 0x90, 0xde, 0xac, 0x17, 0x40, 0xd8, 0x88, 0x10,
    0x6b, 0x01, 0x52, 0x3a, 0xc0, 0xe1, 0xad, 0x01, 0x1c, 0xbb, 0xa4, 0xd4,
    0xb7, 0x47, 0x6c, 0x8a, 0x23, 0x66, 0xe7, 0x83, 0x7b, 0x3b, 0x60, 0xe6,
    0xa3, 0xb2, 0x9a, 0x3f, 0x53, 0xdc, 0x00, 0x62, 0xf2, 0xc0, 0x4d, 0x25,
    0x46, 0x6c, 0xcc, 0x9c, 0x4e, 0xbd, 0x3d, 0x43, 0x1e, 0xb9, 0x76, 0x89,
    0xc5, 0x0a, 0x52, 0x7a, 0xb8, 0xee, 0xfc, 0x96, 0x65, 0x3c, 0x34, 0x7b,
    0x4e, 0xa9, 0xd9, 0xb7, 0xc7, 0xc0, 0x30, 0xa9, 0xd6, 0xe9, 0xfc, 0xc4,
    0x4e, 0x8b, 0x63, 0xa7, 0x66, 0x98, 0x3c, 0xb0, 0xc9, 0x34, 0x8c, 0xc1,
    0xda, 0x5f, 0x42, 0x68, 0x60, 0x1b, 0x09, 0xfb, 0xb6, 0x18, 0xad, 0x08,
    0x79, 0x7b, 0x05, 0xa8, 0x6d, 0x65, 0x3b, 0xf1, 0x80, 0xc8, 0x19, 0x04,
    0xb1, 0x8e, 0xbf, 0xd6, 0x1d, 0x48, 0x82, 0xe4, 0xea, 0xe4, 0x37, 0x4d,
    0x64, 0xb6, 0xd0, 0xb3, 0xa1, 0xf4, 0xea, 0x55, 0x95, 0x1f, 0xb1, 0x31,
    0x86, 0xad, 0xce, 0x3b, 0xdb, 0xe8, 0x7a, 0xc0, 0xff, 0xb5, 0x02, 0x71,
    0x13, 0xd7, 0x3d, 0xdf, 0x57, 0x13, 0xd3, 0x10, 0x3a, 0xce, 0x83, 0xde,
    0x97, 0x5e, 0x98, 0xb4, 0x54, 0x62, 0x20, 0x97, 0xef, 0xf9, 0x26, 0x00,
    0x6b, 0x62, 0x0c, 0x53, 0x24, 0x59, 0xdf, 0xd3, 0xf9, 0x42, 0xe0, 0x9e,
    0xd7, 0x37, 0x7b, 0x00, 0xcd, 0x5f, 0x0d, 0x90, 0xa2, 0xd0, 0x61, 0x2e,
    0x63, 0x92, 0xcc, 0x68, 0xeb, 0xc7, 0xa6, 0xa1, 0x94, 0x12, 0x23, 0x6b,
    0x22, 0xe8, 0x4e, 0x3b, 0x91, 0xae, 0x0f, 0x96, 0x1d, 0x64, 0xcb, 0xc7,
    0x75, 0xe7, 0xfa, 0x6e, 0xe1, 0x43, 0xe2, 0x81, 0x8f, 0x90, 0x11, 0x46,
    0x1a, 0x47, 0x43, 0x80, 0x91, 0x6a, 0x51, 0x0f, 0xa0, 0xde, 0xcb, 0x46,
    0x00, 0xfe, 0xa2, 0x8b, 0xd0, 0x81, 0x6d, 0x60, 0xea, 0xc9, 0xc5, 0x43,
    0x8f, 0x61, 0xf5, 0xba, 0x03, 0xf8, 0x7d, 0xb3, 0x07, 0x18, 0x2a, 0x9f,
    0xde, 0x9d, 0x11, 0xcb, 0x15, 0x2c, 0xa2, 0xce, 0x34, 0x2c, 0xe4, 0xc0,
    0x08, 0x03, 0xe4, 0x85, 0x39, 0xc0, 0xe9, 0xd9, 0xe0, 0xfc, 0x7e, 0x30,
    0xb3, 0xba, 0xb4, 0x42, 0xed, 0x92, 0x83, 0x91, 0xd6, 0xbc, 0x88, 0xa1,
    0xfa, 0xf3, 0x45, 0x90, 0x4d, 0x5c, 0x77, 0xe3, 0xc8, 0x7d, 0x9a, 0x64,
    0xda, 0xff, 0x8e, 0xa7, 0xde, 0xb9, 0xa9, 0xc4, 0xb0, 0x8d, 0x69, 0x59,
    0x34, 0xff, 0xf2, 0xa9, 0xdf, 0x76, 0x80, 0x0a, 0xae, 0x5b, 0xde, 0xf4,
    0xc0, 0x52, 0xe9, 0xb2, 0x12, 0x59, 0x81, 0xb1, 0xab, 0x40, 0xb8, 0x9a,
    0x4c, 0x3c, 0x28, 0x3f, 0x71, 0xfd, 0x96, 0x00, 0xfe, 0x2f, 0xf9, 0x17,
    0xb4, 0x62, 0x58, 0x62, 0x1d, 0x01, 0x88, 0x17, 0x00, 0x00, 0x00, 0x00,
    0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image11_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x20,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x73, 0x7a, 0x7a, 0xf4, 0x00, 0x00, 0x05,
    0x4e, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0xad, 0x97, 0x41, 0x88, 0xd4,
    0x66, 0x14, 0xc7, 0x7f, 0x91, 0x80, 0x2f, 0x30, 0xc2, 0x37, 0x32, 0x42,
    0x02, 0x23, 0x4c, 0xc0, 0x83, 0x2b, 0x14, 0x5c, 0xa9, 0x87, 0x08, 0x1e,
    0x3c, 0xec, 0xc1, 0x85, 0x5e, 0x84, 0x1e, 0x94, 0x7a, 0x6a, 0x2f, 0x45,
    0x2f, 0x65, 0xc5, 0x83, 0x2b, 0x3d, 0x48, 0xed, 0xa1, 0x20, 0x1e, 0xba,
    0xd2, 0x8b, 0x9e, 0x2a, 0x78, 0xdb, 0x4b, 0x61, 0x2c, 0x08, 0xeb, 0x41,
    0x70, 0x0a, 0x16, 0x47, 0x10, 0x76, 0x04, 0x97, 0x66, 0x40, 0x21, 0x01,
    0x07, 0xf2, 0x89, 0x81, 0x7c, 0x4b, 0x03, 0xe9, 0x21, 0x99, 0xd9, 0x1d,
    0x67, 0x1d, 0xc7, 0xad, 0x0f, 0x86, 0x37, 0x93, 0xc9, 0xf7, 0xbd, 0xff,
    0xfb, 0xe7, 0xff, 0xde, 0xfb, 0x62, 0x3d, 0x7e, 0xfc, 0x98, 0x59, 0xec,
    0xae, 0x09, 0x8a, 0x6f, 0xa4, 0x63, 0xcd, 0x74, 0xf3, 0x27, 0x98, 0x3d,
    0xed, 0xcf, 0xdb, 0x79, 0x50, 0x68, 0x03, 0x61, 0x13, 0xd0, 0xa0, 0x75,
    0x50, 0x5c, 0x54, 0x25, 0x88, 0x9f, 0xc2, 0xa3, 0x85, 0xe0, 0x60, 0x4c,
    0xc2, 0xd5, 0xb9, 0x17, 0xbb, 0x06, 0x36, 0x15, 0x80, 0x49, 0xe1, 0x69,
    0x0e, 0xfd, 0x1a, 0xe0, 0x02, 0x2f, 0xe0, 0xf6, 0x20, 0x28, 0xf4, 0x3b,
    0x70, 0x1d, 0x58, 0x3d, 0x0c, 0x2a, 0xaf, 0xb3, 0xfc, 0x3c, 0x28, 0xae,
    0xfb, 0xbb, 0x63, 0x67, 0x02, 0xc0, 0x4a, 0x1a, 0x14, 0x22, 0xf0, 0x9d,
    0xdd, 0xb1, 0x10, 0xd0, 0x5d, 0xe0, 0x4b, 0x20, 0x85, 0xee, 0x21, 0xe8,
    0xba, 0x25, 0x16, 0x06, 0xa0, 0x1b, 0xa0, 0x0d, 0xe0, 0xc3, 0xd2, 0x23,
    0xb7, 0xb8, 0x71, 0x32, 0xfe, 0x64, 0x10, 0x7b, 0xc6, 0x82, 0x9b, 0xa0,
    0x58, 0x3b, 0x0c, 0xed, 0x06, 0xac, 0xd8, 0x41, 0xa1, 0x73, 0x30, 0x67,
    0x01, 0x03, 0x08, 0xa0, 0x41, 0x69, 0x30, 0x1b, 0xd5, 0xa5, 0x8d, 0xf2,
    0x7a, 0xac, 0x80, 0x39, 0x9f, 0xe5, 0xce, 0xd1, 0x02, 0x60, 0xa9, 0x13,
    0x14, 0xcb, 0xdd, 0xa0, 0x98, 0x05, 0x80, 0x35, 0x14, 0xe1, 0x4a, 0x1a,
    0x14, 0x5d, 0x81, 0x9e, 0x0b, 0xd4, 0xca, 0x8c, 0x47, 0xde, 0x06, 0x75,
    0x3f, 0xc1, 0xdb, 0x00, 0xd0, 0x88, 0xad, 0x30, 0x44, 0x88, 0xf8, 0x20,
    0x1a, 0xd3, 0xf2, 0x08, 0x7d, 0x50, 0x39, 0xf8, 0xdd, 0x04, 0xed, 0xd7,
    0xe1, 0x55, 0x82, 0x8a, 0xe1, 0xc6, 0xe9, 0xe9, 0xfa, 0x18, 0x31, 0xe0,
    0x09, 0x24, 0x0f, 0x81, 0x0e, 0x30, 0xd8, 0xca, 0x58, 0x0c, 0xb4, 0x7e,
    0x4b, 0x98, 0x8f, 0x41, 0xc4, 0x20, 0x4a, 0xc0, 0x8e, 0x70, 0x6b, 0x1e,
    0xe4, 0x1a, 0x10, 0x64, 0x23, 0x61, 0xf1, 0x39, 0x78, 0xaf, 0xa0, 0xfb,
    0x55, 0x9d, 0xde, 0x21, 0x08, 0x17, 0xea, 0x18, 0x55, 0xe7, 0xc2, 0x7d,
    0x77, 0x2a, 0x13, 0x23, 0x00, 0x51, 0x9a, 0x95, 0x5f, 0xfe, 0x2e, 0x03,
    0xa3, 0xab, 0xcc, 0xff, 0x88, 0xa8, 0x0b, 0xe8, 0x9a, 0x2e, 0x83, 0x4b,
    0x82, 0x28, 0x0f, 0x2d, 0x7a, 0x04, 0x46, 0x04, 0x42, 0x1d, 0xa2, 0x34,
    0x04, 0x8f, 0x12, 0x54, 0x5e, 0x25, 0x61, 0xe0, 0xd6, 0xe9, 0xe9, 0xba,
    0x18, 0x01, 0x50, 0xe2, 0x70, 0xec, 0x10, 0x88, 0xaa, 0xa8, 0xb7, 0x81,
    0x18, 0x7c, 0xa3, 0x90, 0xa6, 0x20, 0x0d, 0x85, 0x31, 0x3d, 0x54, 0x6e,
    0x30, 0x26, 0x42, 0x94, 0x02, 0x25, 0xf8, 0xae, 0x0f, 0x4a, 0x50, 0xae,
    0x8b, 0xb1, 0x33, 0x3c, 0xa7, 0xce, 0x89, 0x17, 0x20, 0x35, 0x30, 0x02,
    0x4b, 0xf7, 0xf6, 0x4e, 0x65, 0xc0, 0x86, 0x52, 0x7c, 0x26, 0xcd, 0x50,
    0x07, 0x1c, 0xe6, 0xf6, 0x41, 0xd7, 0x06, 0x52, 0x90, 0x1c, 0x8c, 0x1d,
    0xc3, 0x20, 0xe1, 0xd6, 0xa9, 0x4d, 0x8b, 0x39, 0x0b, 0xd8, 0xac, 0x3e,
    0x6f, 0x01, 0x58, 0xea, 0xee, 0x2d, 0xe4, 0xe0, 0x31, 0x78, 0x17, 0x21,
    0x9e, 0x47, 0xf4, 0x2e, 0xc2, 0xa9, 0x7b, 0xcc, 0xf7, 0x33, 0x3a, 0xc7,
    0x1d, 0x7c, 0xed, 0x01, 0xfd, 0xe9, 0x00, 0x22, 0x03, 0x0f, 0x9b, 0x4e,
    0x29, 0xed, 0x46, 0x19, 0x1c, 0xa9, 0x7c, 0x2e, 0xdc, 0x5a, 0xd8, 0xfc,
    0x20, 0x8d, 0x37, 0xe6, 0x37, 0x2d, 0xe8, 0xb0, 0xa2, 0xca, 0xa6, 0xa5,
    0x94, 0x87, 0x36, 0x30, 0x57, 0x73, 0xd0, 0x39, 0x84, 0xc7, 0x3d, 0xce,
    0x3d, 0x54, 0x85, 0x67, 0x40, 0x6b, 0xc3, 0x9d, 0xb3, 0xe3, 0xa2, 0xdc,
    0x03, 0xa0, 0x73, 0x46, 0xcf, 0x7c, 0xcc, 0x0b, 0x18, 0x93, 0x4c, 0x63,
    0x70, 0x64, 0x17, 0xed, 0x8e, 0x45, 0x03, 0xb4, 0x64, 0x88, 0x0b, 0xb1,
    0x9d, 0x31, 0x27, 0xa0, 0x6b, 0xd0, 0x5f, 0x70, 0xe8, 0x9c, 0x74, 0xc8,
    0x6c, 0x99, 0x58, 0xb7, 0xe7, 0x6e, 0x1a, 0x14, 0x26, 0xdc, 0x96, 0xf1,
    0x36, 0x6f, 0x6c, 0x70, 0x9b, 0x47, 0x66, 0x02, 0x00, 0x70, 0xd5, 0x74,
    0xac, 0x96, 0xeb, 0x80, 0x80, 0xdb, 0x74, 0x10, 0xc0, 0x1d, 0xee, 0x57,
    0x03, 0xdd, 0x72, 0x38, 0xf7, 0xfb, 0x78, 0x55, 0xec, 0x89, 0x75, 0x06,
    0x39, 0xf0, 0x80, 0xb2, 0x04, 0xbb, 0xd5, 0x82, 0x8a, 0x89, 0x5e, 0x2d,
    0x63, 0xe9, 0x41, 0x6b, 0xa6, 0xa6, 0x02, 0x10, 0xe7, 0x19, 0xd2, 0x80,
    0xd8, 0x66, 0xeb, 0x71, 0xda, 0xc0, 0x4b, 0x20, 0x06, 0x93, 0x46, 0xe3,
    0x0c, 0x5c, 0x6a, 0x3e, 0xb3, 0x46, 0x0d, 0x39, 0xa5, 0x2c, 0x9f, 0x1e,
    0xa3, 0x3e, 0xa0, 0x0f, 0x3a, 0x18, 0xe5, 0xcd, 0xcc, 0xc2, 0xa5, 0xf8,
    0x99, 0x45, 0x0e, 0x6e, 0x0d, 0x30, 0x20, 0xc3, 0x0e, 0x9a, 0x82, 0x8a,
    0x23, 0x56, 0xbf, 0xb7, 0x26, 0x35, 0xe0, 0x2b, 0x68, 0xa9, 0x0c, 0xa5,
    0x40, 0x6c, 0x4a, 0x46, 0x5e, 0x95, 0xc8, 0x4d, 0x0a, 0xa1, 0x0f, 0xcb,
    0xdd, 0xc3, 0x33, 0xb3, 0x80, 0x80, 0x4e, 0xcb, 0xe0, 0x7a, 0xa8, 0xa9,
    0x7e, 0x84, 0x79, 0xf3, 0x74, 0xe2, 0xd6, 0xb2, 0x0f, 0xe4, 0x19, 0x3e,
    0x31, 0xf3, 0x92, 0x70, 0xa6, 0x45, 0xd9, 0x07, 0x86, 0x8c, 0x48, 0x39,
    0x70, 0xba, 0x07, 0xeb, 0x2c, 0xf7, 0x66, 0xeb, 0xef, 0x18, 0xf0, 0x80,
    0x78, 0x00, 0xba, 0x2a, 0x69, 0x0e, 0x79, 0xe0, 0x9d, 0x98, 0xb8, 0xd5,
    0x7a, 0xff, 0x40, 0xb2, 0xdc, 0x71, 0x8b, 0xb0, 0xe6, 0xd3, 0x17, 0x26,
    0x66, 0xa5, 0x00, 0xf3, 0x64, 0x78, 0xfb, 0x1c, 0x2e, 0x35, 0x3e, 0x3c,
    0x7e, 0xef, 0x36, 0x83, 0xc2, 0xc4, 0xd0, 0x1e, 0x40, 0xbc, 0xad, 0x88,
    0x24, 0x05, 0x79, 0x16, 0xd2, 0x3e, 0xbf, 0xd5, 0x1d, 0x27, 0xc6, 0xb1,
    0xa7, 0x7c, 0xc2, 0x1c, 0x70, 0x80, 0x6c, 0xdc, 0x9b, 0x0c, 0x3a, 0x8e,
    0x43, 0xeb, 0x1d, 0xac, 0x48, 0x50, 0x90, 0x83, 0xa7, 0x20, 0xc9, 0xc1,
    0xab, 0x6d, 0xf9, 0xb8, 0x0f, 0x8f, 0x75, 0x15, 0x7c, 0xfb, 0x7a, 0x01,
    0x69, 0xfa, 0x2c, 0x5e, 0x5b, 0x2f, 0xda, 0x3f, 0xee, 0xb7, 0x76, 0x04,
    0xd0, 0xcb, 0x13, 0xfa, 0x52, 0x87, 0xa4, 0xfa, 0x77, 0x07, 0xdf, 0xb7,
    0xa1, 0x1f, 0x42, 0x35, 0x1a, 0xf0, 0x0e, 0x40, 0x57, 0x97, 0x65, 0x1b,
    0xbd, 0xac, 0xce, 0x08, 0xf9, 0xb6, 0x75, 0xb5, 0xad, 0xfd, 0xcd, 0xeb,
    0x90, 0xb5, 0x2a, 0xf8, 0x04, 0x80, 0xe5, 0x27, 0x41, 0x21, 0x07, 0xab,
    0x05, 0xba, 0x5a, 0x3c, 0x7c, 0x14, 0x07, 0x28, 0x85, 0x29, 0x8c, 0xce,
    0x07, 0xba, 0xf2, 0x71, 0x38, 0x7e, 0x9d, 0x7c, 0xdb, 0xef, 0x3a, 0x30,
    0x9c, 0x2f, 0x21, 0x88, 0x51, 0x40, 0x3c, 0x8a, 0x39, 0x76, 0x20, 0x01,
    0x08, 0xed, 0xac, 0xac, 0xdf, 0xc6, 0xb6, 0xc0, 0x73, 0xd5, 0x06, 0xf3,
    0xd5, 0x86, 0x50, 0xb5, 0xe9, 0x19, 0xfc, 0xbf, 0xd5, 0x5e, 0x1a, 0xd4,
    0x9f, 0x11, 0xe6, 0xe5, 0xea, 0x58, 0xbc, 0x31, 0x00, 0xd7, 0x8f, 0x77,
    0x2c, 0x3f, 0x72, 0x90, 0x14, 0x68, 0x02, 0xc7, 0xc1, 0xcd, 0xc1, 0xed,
    0x55, 0x53, 0xd2, 0x06, 0x0e, 0x53, 0x4a, 0x7c, 0x48, 0xeb, 0x47, 0xbc,
    0xf4, 0x41, 0xdd, 0x5c, 0x47, 0xdd, 0x4f, 0x30, 0x61, 0x9b, 0xb5, 0x5f,
    0x8e, 0x8c, 0x89, 0x77, 0xa2, 0x0a, 0x00, 0x2e, 0x74, 0x82, 0x22, 0x9c,
    0xcf, 0xf0, 0x9e, 0x3b, 0xf0, 0x7a, 0xbd, 0x4c, 0x5b, 0x41, 0xb4, 0xe0,
    0xa1, 0x87, 0x0c, 0x3e, 0x7f, 0x6f, 0xd1, 0x02, 0x5b, 0x27, 0xa8, 0x01,
    0x65, 0x47, 0xa5, 0x64, 0x41, 0xfd, 0x55, 0xf6, 0x80, 0xb5, 0x6b, 0xfb,
    0x27, 0x2a, 0x67, 0xc7, 0x53, 0xf1, 0xad, 0xa0, 0x63, 0x2d, 0x3d, 0x3a,
    0x5a, 0xe8, 0xfe, 0x1a, 0x77, 0xce, 0x3b, 0xd6, 0x70, 0xf4, 0x7e, 0x7b,
    0x4f, 0x0a, 0x59, 0xa8, 0x13, 0x0b, 0xe3, 0xc7, 0xb6, 0xed, 0x53, 0xb4,
    0x41, 0xf9, 0xfc, 0x07, 0x94, 0x9a, 0x51, 0x60, 0x44, 0x90, 0xdc, 0xd9,
    0x29, 0xd4, 0xce, 0x0c, 0x4c, 0xb3, 0x33, 0x9d, 0x56, 0x11, 0x9f, 0xf2,
    0xe0, 0x49, 0x99, 0x1d, 0x80, 0x8a, 0x01, 0x3b, 0x04, 0x5c, 0xf4, 0x59,
    0xa7, 0x14, 0x9d, 0x06, 0x36, 0x40, 0x7a, 0x09, 0xf2, 0x50, 0xd3, 0xbe,
    0xb2, 0xf3, 0xc9, 0x68, 0x42, 0x84, 0x1f, 0x33, 0x11, 0xaf, 0xcc, 0xf2,
    0x6b, 0xe0, 0x34, 0xc8, 0x17, 0x20, 0xaf, 0xd7, 0x69, 0x2f, 0xc4, 0x96,
    0x74, 0x43, 0xd4, 0x03, 0x46, 0x8c, 0x48, 0x0a, 0xf2, 0xc8, 0x7c, 0x30,
    0x38, 0x7c, 0xe4, 0xc5, 0x64, 0x27, 0x33, 0x69, 0x04, 0xe2, 0x8d, 0xa6,
    0x9c, 0xdc, 0x0f, 0xe1, 0x4d, 0x0c, 0x38, 0xac, 0x5e, 0x7e, 0x6b, 0x2d,
    0xde, 0x7c, 0x5a, 0x88, 0x3a, 0x06, 0xcf, 0x42, 0xa4, 0xc7, 0xd4, 0xe0,
    0xbb, 0x02, 0x20, 0xb1, 0xe0, 0xfe, 0x9a, 0x41, 0xcb, 0xc1, 0x0c, 0x32,
    0x24, 0x86, 0xd5, 0x2b, 0xce, 0x28, 0x48, 0xfb, 0x87, 0x4d, 0x6b, 0xf1,
    0xe7, 0xb0, 0x40, 0xaf, 0xd3, 0xfe, 0x65, 0x52, 0x74, 0xef, 0xdb, 0x27,
    0x6b, 0x60, 0x68, 0x8b, 0xd7, 0xfe, 0x29, 0x44, 0x7c, 0x56, 0x2f, 0x5b,
    0xff, 0xeb, 0x85, 0x75, 0xd7, 0x00, 0x3e, 0x97, 0x7d, 0xb2, 0x08, 0x3f,
    0xb7, 0xfd, 0x07, 0x26, 0x9e, 0x3c, 0xb0, 0xac, 0x9f, 0x93, 0xd7, 0x00,
    0x00, 0x00, 0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image12_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x1f, 0xf3, 0xff, 0x61, 0x00, 0x00, 0x01,
    0x14, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0xa5, 0x93, 0xad, 0x4e, 0x03,
    0x51, 0x10, 0x85, 0xbf, 0xbb, 0xa9, 0x58, 0xb9, 0x06, 0x07, 0x0e, 0xd3,
    0x47, 0xe8, 0x24, 0x24, 0xf4, 0x26, 0x98, 0xca, 0x26, 0x88, 0xd6, 0xaf,
    0xe0, 0x05, 0x78, 0x14, 0x2c, 0x82, 0x07, 0x40, 0x54, 0xd4, 0x2d, 0xa2,
    0xc9, 0x94, 0xa4, 0x02, 0x92, 0x15, 0x15, 0x20, 0x36, 0x01, 0x89, 0xa8,
    0xa8, 0x18, 0xd1, 0xe4, 0x22, 0x58, 0xd8, 0x6e, 0x28, 0x3f, 0xdb, 0x3d,
    0xc9, 0x55, 0x37, 0xdf, 0xc9, 0x9c, 0x93, 0x19, 0xa7, 0xaa, 0xb4, 0x51,
    0xd4, 0x8a, 0x06, 0x3a, 0xfb, 0x82, 0x3e, 0x97, 0x40, 0x07, 0x22, 0x99,
    0x4b, 0x68, 0x0a, 0xcb, 0x5c, 0x82, 0xad, 0x21, 0xeb, 0xaa, 0x8b, 0x62,
    0x62, 0xfc, 0xc2, 0xff, 0xcb, 0x64, 0xf0, 0x34, 0x08, 0xe3, 0xd7, 0x71,
    0xc0, 0x40, 0x7b, 0xea, 0x00, 0xa2, 0xac, 0x97, 0xb9, 0xa4, 0x9b, 0xe0,
    0xf3, 0x9f, 0x4d, 0xfc, 0xc2, 0x87, 0x61, 0x3c, 0x0c, 0xc9, 0x51, 0x42,
    0xb1, 0x2c, 0xd0, 0xfe, 0x07, 0x0c, 0x65, 0x89, 0x2b, 0x5b, 0xc1, 0x08,
    0x64, 0x56, 0x8f, 0x23, 0x77, 0x12, 0x64, 0x23, 0x81, 0x14, 0x6c, 0x6d,
    0x14, 0xd3, 0x02, 0x3d, 0xab, 0x60, 0x28, 0x4b, 0xb4, 0xdc, 0xe0, 0x14,
    0x38, 0x07, 0xb9, 0x96, 0x80, 0x01, 0x27, 0x40, 0x0a, 0x1c, 0x80, 0x4d,
    0x0c, 0xbb, 0x35, 0x34, 0xad, 0xc3, 0x5f, 0x06, 0x3c, 0x97, 0xef, 0x18,
    0x18, 0x95, 0x3f, 0x87, 0x80, 0x01, 0x57, 0xc0, 0x3d, 0xe8, 0xc5, 0x77,
    0x18, 0xc0, 0x7d, 0x2e, 0x92, 0x2c, 0x25, 0xd0, 0x07, 0x36, 0x40, 0x0c,
    0xbc, 0x01, 0x53, 0x6a, 0x79, 0x77, 0xa9, 0x5a, 0xa4, 0xc7, 0x12, 0xb2,
    0x72, 0x9a, 0x9b, 0xbf, 0xe1, 0x2a, 0x02, 0xc0, 0xcb, 0x96, 0xc1, 0x84,
    0x9d, 0x79, 0x7f, 0x9d, 0x40, 0x2f, 0xd5, 0x31, 0x6b, 0x06, 0xd7, 0x0c,
    0x00, 0x78, 0x68, 0x06, 0xc3, 0x56, 0x89, 0xfb, 0xaa, 0xf5, 0x35, 0xbe,
    0x03, 0x1c, 0x9f, 0x69, 0xaa, 0xea, 0xf6, 0x40, 0xfd, 0x00, 0x00, 0x00,
    0x00, 0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};

static const unsigned char image13_data[] = { 
    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10,
    0x08, 0x06, 0x00, 0x00, 0x00, 0x1f, 0xf3, 0xff, 0x61, 0x00, 0x00, 0x01,
    0x8b, 0x49, 0x44, 0x41, 0x54, 0x78, 0x9c, 0xa5, 0x92, 0x31, 0x4b, 0xc3,
    0x50, 0x14, 0x85, 0xbf, 0x48, 0xa1, 0x71, 0x90, 0xd4, 0xad, 0xd9, 0x9a,
    0xad, 0xcd, 0xa4, 0xa3, 0x0f, 0x74, 0x08, 0xe8, 0x10, 0x70, 0xb0, 0xa3,
    0x83, 0x60, 0x87, 0x2e, 0x82, 0x63, 0x07, 0x87, 0x8e, 0x0e, 0xfe, 0x00,
    0x37, 0xff, 0x82, 0x82, 0x83, 0x83, 0xa3, 0x43, 0x74, 0xd2, 0x45, 0xa2,
    0x5b, 0x0b, 0x1d, 0x2a, 0x28, 0xa4, 0x85, 0x40, 0x9e, 0x10, 0x78, 0x0e,
    0xaf, 0xa6, 0xa9, 0x69, 0x11, 0xf4, 0x4c, 0x77, 0x78, 0xe7, 0xbc, 0x7b,
    0xcf, 0x39, 0x46, 0x10, 0x04, 0xfc, 0x07, 0x4b, 0xdf, 0x43, 0xad, 0x23,
    0x54, 0xfd, 0xd4, 0x57, 0xbf, 0x11, 0xac, 0x7d, 0xa1, 0xac, 0xa6, 0xc8,
    0xde, 0x2d, 0x01, 0xd4, 0x3b, 0x9e, 0xb2, 0x0f, 0x5b, 0xac, 0x1e, 0x1f,
    0x51, 0x3f, 0x6b, 0x2e, 0x14, 0xa9, 0xb6, 0x3d, 0xe5, 0x6e, 0x37, 0x70,
    0xd6, 0x2a, 0x94, 0x7d, 0x2d, 0xa2, 0x37, 0xa8, 0x98, 0x60, 0xdb, 0x60,
    0xda, 0xac, 0xee, 0xf9, 0xd4, 0xba, 0xc5, 0x4d, 0xaa, 0x2d, 0x4f, 0x39,
    0x1b, 0x0e, 0xa4, 0x09, 0xcb, 0xa6, 0x09, 0xa5, 0xdc, 0x06, 0xaf, 0x27,
    0x37, 0x46, 0x74, 0x7e, 0x01, 0x83, 0x47, 0x58, 0xb1, 0xb1, 0xf7, 0x3c,
    0x6a, 0x9d, 0xa9, 0x48, 0xb5, 0xe5, 0x29, 0x67, 0xd3, 0x81, 0x14, 0x88,
    0x24, 0xe1, 0xc3, 0x1b, 0x9f, 0xd7, 0x81, 0x01, 0x60, 0xe4, 0x4d, 0xac,
    0x75, 0x7d, 0x65, 0xef, 0x7a, 0x60, 0x56, 0xe0, 0xed, 0x85, 0xde, 0xd5,
    0x13, 0x48, 0xd0, 0xe4, 0x24, 0x23, 0x8f, 0x2f, 0x35, 0xb9, 0x20, 0xa0,
    0xcd, 0xf4, 0x95, 0xbd, 0xbd, 0x0e, 0xa5, 0x65, 0xf8, 0x18, 0x82, 0x94,
    0x20, 0x81, 0x28, 0x2a, 0x90, 0xa7, 0x1e, 0xe4, 0xd0, 0x3f, 0xbb, 0x31,
    0x7a, 0x57, 0xf7, 0x9a, 0x9c, 0x02, 0x32, 0x59, 0x48, 0x86, 0xcc, 0x8a,
    0x1f, 0x48, 0x99, 0xfc, 0x9c, 0x40, 0x0c, 0xc4, 0x72, 0xee, 0xb3, 0xb9,
    0x1b, 0x58, 0x2d, 0xa1, 0xdd, 0x96, 0xfa, 0x66, 0xa2, 0x11, 0x48, 0x70,
    0x2b, 0x60, 0xed, 0x88, 0x42, 0x3a, 0x33, 0x02, 0xd5, 0xb6, 0xa7, 0xdc,
    0xcd, 0xc6, 0x8c, 0xdb, 0xe1, 0xf3, 0x08, 0x46, 0x12, 0x52, 0x13, 0xd7,
    0x04, 0x6b, 0x6b, 0x56, 0x24, 0x13, 0xc8, 0xe7, 0x9c, 0xbf, 0x79, 0x7c,
    0x19, 0x18, 0x61, 0x5f, 0xc2, 0x87, 0x84, 0x18, 0xdc, 0x14, 0x2c, 0xf1,
    0xa3, 0x89, 0xd6, 0x81, 0xd0, 0x39, 0xc3, 0xdc, 0xa8, 0xc6, 0xb7, 0x81,
    0x11, 0xc6, 0xe8, 0x34, 0x00, 0x17, 0x28, 0x8b, 0x5c, 0x13, 0x65, 0x0c,
    0xd1, 0x60, 0x08, 0xef, 0x8b, 0xdd, 0x1e, 0xdf, 0x05, 0x46, 0x38, 0x99,
    0x13, 0x60, 0x34, 0x99, 0xb3, 0x1e, 0x94, 0x7d, 0xa1, 0x28, 0x91, 0x35,
    0x6c, 0x11, 0xca, 0x42, 0x28, 0xa9, 0x89, 0xc5, 0x26, 0xfe, 0x05, 0x5f,
    0x10, 0xa2, 0xc4, 0xcc, 0x18, 0xac, 0x36, 0x8f, 0x00, 0x00, 0x00, 0x00,
    0x49, 0x45, 0x4e, 0x44, 0xae, 0x42, 0x60, 0x82
};


/*
 *  Constructs a PreferencesDialog as a child of 'parent', with the
 *  name 'name' and widget flags set to 'f'.
 *
 *  The dialog will by default be modeless, unless you set 'modal' to
 *  TRUE to construct a modal dialog.
 */
PreferencesDialog::PreferencesDialog( QWidget* parent, const char* name, bool modal, WFlags fl )
    : QDialog( parent, name, modal, fl )
{
    QImage img;
    img.loadFromData( image0_data, sizeof( image0_data ), "PNG" );
    image0 = img;
    img.loadFromData( image1_data, sizeof( image1_data ), "PNG" );
    image1 = img;
    img.loadFromData( image2_data, sizeof( image2_data ), "PNG" );
    image2 = img;
    img.loadFromData( image3_data, sizeof( image3_data ), "PNG" );
    image3 = img;
    img.loadFromData( image4_data, sizeof( image4_data ), "PNG" );
    image4 = img;
    img.loadFromData( image5_data, sizeof( image5_data ), "PNG" );
    image5 = img;
    img.loadFromData( image6_data, sizeof( image6_data ), "PNG" );
    image6 = img;
    img.loadFromData( image7_data, sizeof( image7_data ), "PNG" );
    image7 = img;
    img.loadFromData( image8_data, sizeof( image8_data ), "PNG" );
    image8 = img;
    img.loadFromData( image9_data, sizeof( image9_data ), "PNG" );
    image9 = img;
    img.loadFromData( image10_data, sizeof( image10_data ), "PNG" );
    image10 = img;
    img.loadFromData( image11_data, sizeof( image11_data ), "PNG" );
    image11 = img;
    img.loadFromData( image12_data, sizeof( image12_data ), "PNG" );
    image12 = img;
    img.loadFromData( image13_data, sizeof( image13_data ), "PNG" );
    image13 = img;
    if ( !name )
	setName( "PreferencesDialog" );
    setSizeGripEnabled( TRUE );
    PreferencesDialogLayout = new QVBoxLayout( this, 11, 6, "PreferencesDialogLayout"); 

    tabWidget = new QTabWidget( this, "tabWidget" );

    tab = new QWidget( tabWidget, "tab" );
    tabLayout = new QVBoxLayout( tab, 11, 6, "tabLayout"); 

    layout45 = new QHBoxLayout( 0, 0, 6, "layout45"); 

    TextLabel_Warn2 = new QLabel( tab, "TextLabel_Warn2" );
    TextLabel_Warn2->setPaletteForegroundColor( QColor( 170, 0, 0 ) );
    QFont TextLabel_Warn2_font(  TextLabel_Warn2->font() );
    TextLabel_Warn2_font.setBold( TRUE );
    TextLabel_Warn2->setFont( TextLabel_Warn2_font ); 
    TextLabel_Warn2->setTextFormat( QLabel::AutoText );
    TextLabel_Warn2->setAlignment( int( QLabel::AlignCenter ) );
    layout45->addWidget( TextLabel_Warn2 );

    pixmapLabel1 = new QLabel( tab, "pixmapLabel1" );
    pixmapLabel1->setPixmap( image0 );
    pixmapLabel1->setScaledContents( FALSE );
    layout45->addWidget( pixmapLabel1 );
    tabLayout->addLayout( layout45 );
    spacer16 = new QSpacerItem( 20, 21, QSizePolicy::Minimum, QSizePolicy::Expanding );
    tabLayout->addItem( spacer16 );

    layout52 = new QVBoxLayout( 0, 0, 6, "layout52"); 

    TextLabel1_3_5 = new QLabel( tab, "TextLabel1_3_5" );
    QFont TextLabel1_3_5_font(  TextLabel1_3_5->font() );
    TextLabel1_3_5_font.setBold( TRUE );
    TextLabel1_3_5->setFont( TextLabel1_3_5_font ); 
    TextLabel1_3_5->setTextFormat( QLabel::AutoText );
    layout52->addWidget( TextLabel1_3_5 );

    Line1_2_5 = new QFrame( tab, "Line1_2_5" );
    Line1_2_5->setFrameShape( QFrame::HLine );
    Line1_2_5->setFrameShadow( QFrame::Sunken );
    Line1_2_5->setFrameShape( QFrame::HLine );
    layout52->addWidget( Line1_2_5 );

    layout46 = new QHBoxLayout( 0, 0, 6, "layout46"); 

    LineEdit_LogFile = new QLineEdit( tab, "LineEdit_LogFile" );
    layout46->addWidget( LineEdit_LogFile );

    ToolButton_BrowseLog = new QToolButton( tab, "ToolButton_BrowseLog" );
    ToolButton_BrowseLog->setIconSet( QIconSet( image1 ) );
    layout46->addWidget( ToolButton_BrowseLog );
    layout52->addLayout( layout46 );
    tabLayout->addLayout( layout52 );
    spacer16_2 = new QSpacerItem( 20, 20, QSizePolicy::Minimum, QSizePolicy::Expanding );
    tabLayout->addItem( spacer16_2 );

    layout51 = new QVBoxLayout( 0, 0, 6, "layout51"); 

    TextLabel1_3_5_2 = new QLabel( tab, "TextLabel1_3_5_2" );
    QFont TextLabel1_3_5_2_font(  TextLabel1_3_5_2->font() );
    TextLabel1_3_5_2_font.setBold( TRUE );
    TextLabel1_3_5_2->setFont( TextLabel1_3_5_2_font ); 
    TextLabel1_3_5_2->setTextFormat( QLabel::AutoText );
    layout51->addWidget( TextLabel1_3_5_2 );

    Line1_2_5_2 = new QFrame( tab, "Line1_2_5_2" );
    Line1_2_5_2->setFrameShape( QFrame::HLine );
    Line1_2_5_2->setFrameShadow( QFrame::Sunken );
    Line1_2_5_2->setFrameShape( QFrame::HLine );
    layout51->addWidget( Line1_2_5_2 );

    layout47 = new QHBoxLayout( 0, 0, 6, "layout47"); 

    LineEdit_ADF = new QLineEdit( tab, "LineEdit_ADF" );
    layout47->addWidget( LineEdit_ADF );

    ToolButton_BrowseADF = new QToolButton( tab, "ToolButton_BrowseADF" );
    ToolButton_BrowseADF->setIconSet( QIconSet( image1 ) );
    layout47->addWidget( ToolButton_BrowseADF );
    layout51->addLayout( layout47 );
    tabLayout->addLayout( layout51 );
    spacer16_3 = new QSpacerItem( 20, 21, QSizePolicy::Minimum, QSizePolicy::Expanding );
    tabLayout->addItem( spacer16_3 );

    layout50 = new QVBoxLayout( 0, 0, 6, "layout50"); 

    TextLabel1_3_5_2_2 = new QLabel( tab, "TextLabel1_3_5_2_2" );
    QFont TextLabel1_3_5_2_2_font(  TextLabel1_3_5_2_2->font() );
    TextLabel1_3_5_2_2_font.setBold( TRUE );
    TextLabel1_3_5_2_2->setFont( TextLabel1_3_5_2_2_font ); 
    TextLabel1_3_5_2_2->setTextFormat( QLabel::AutoText );
    layout50->addWidget( TextLabel1_3_5_2_2 );

    Line1_2_5_2_2 = new QFrame( tab, "Line1_2_5_2_2" );
    Line1_2_5_2_2->setFrameShape( QFrame::HLine );
    Line1_2_5_2_2->setFrameShadow( QFrame::Sunken );
    Line1_2_5_2_2->setFrameShape( QFrame::HLine );
    layout50->addWidget( Line1_2_5_2_2 );

    CheckBox_ValidateADF = new QCheckBox( tab, "CheckBox_ValidateADF" );
    CheckBox_ValidateADF->setChecked( FALSE );
    layout50->addWidget( CheckBox_ValidateADF );
    tabLayout->addLayout( layout50 );
    spacer16_4 = new QSpacerItem( 20, 20, QSizePolicy::Minimum, QSizePolicy::Expanding );
    tabLayout->addItem( spacer16_4 );

    layout49 = new QVBoxLayout( 0, 0, 6, "layout49"); 

    TextLabel5 = new QLabel( tab, "TextLabel5" );
    layout49->addWidget( TextLabel5 );

    layout48 = new QHBoxLayout( 0, 0, 6, "layout48"); 

    LineEdit_ValidationCmd = new QLineEdit( tab, "LineEdit_ValidationCmd" );
    LineEdit_ValidationCmd->setEnabled( FALSE );
    layout48->addWidget( LineEdit_ValidationCmd );

    ToolButton_BrowseCmd = new QToolButton( tab, "ToolButton_BrowseCmd" );
    ToolButton_BrowseCmd->setIconSet( QIconSet( image1 ) );
    layout48->addWidget( ToolButton_BrowseCmd );
    layout49->addLayout( layout48 );
    tabLayout->addLayout( layout49 );
    spacer16_5 = new QSpacerItem( 20, 21, QSizePolicy::Minimum, QSizePolicy::Expanding );
    tabLayout->addItem( spacer16_5 );
    tabWidget->insertTab( tab, QString("") );

    Widget8 = new QWidget( tabWidget, "Widget8" );
    Widget8Layout = new QVBoxLayout( Widget8, 11, 6, "Widget8Layout"); 

    layout44 = new QVBoxLayout( 0, 0, 6, "layout44"); 

    pixmapLabel1_2 = new QLabel( Widget8, "pixmapLabel1_2" );
    pixmapLabel1_2->setPixmap( image2 );
    pixmapLabel1_2->setScaledContents( FALSE );
    pixmapLabel1_2->setAlignment( int( QLabel::AlignVCenter | QLabel::AlignRight ) );
    layout44->addWidget( pixmapLabel1_2 );
    spacer15 = new QSpacerItem( 20, 16, QSizePolicy::Minimum, QSizePolicy::Expanding );
    layout44->addItem( spacer15 );

    layout42 = new QVBoxLayout( 0, 0, 6, "layout42"); 

    TextLabel1 = new QLabel( Widget8, "TextLabel1" );
    QFont TextLabel1_font(  TextLabel1->font() );
    TextLabel1_font.setBold( TRUE );
    TextLabel1->setFont( TextLabel1_font ); 
    TextLabel1->setTextFormat( QLabel::AutoText );
    layout42->addWidget( TextLabel1 );

    Line1 = new QFrame( Widget8, "Line1" );
    Line1->setFrameShape( QFrame::HLine );
    Line1->setFrameShadow( QFrame::Sunken );
    Line1->setFrameShape( QFrame::HLine );
    layout42->addWidget( Line1 );

    layout40 = new QHBoxLayout( 0, 0, 6, "layout40"); 

    LineEdit_Relationship = new QLineEdit( Widget8, "LineEdit_Relationship" );
    layout40->addWidget( LineEdit_Relationship );

    ToolButton_AvailableTags = new QToolButton( Widget8, "ToolButton_AvailableTags" );
    ToolButton_AvailableTags->setIconSet( QIconSet( image3 ) );
    layout40->addWidget( ToolButton_AvailableTags );
    layout42->addLayout( layout40 );

    TextLabel1_2_2 = new QLabel( Widget8, "TextLabel1_2_2" );
    QFont TextLabel1_2_2_font(  TextLabel1_2_2->font() );
    TextLabel1_2_2_font.setBold( TRUE );
    TextLabel1_2_2->setFont( TextLabel1_2_2_font ); 
    TextLabel1_2_2->setTextFormat( QLabel::AutoText );
    layout42->addWidget( TextLabel1_2_2 );

    Line2_2 = new QFrame( Widget8, "Line2_2" );
    Line2_2->setFrameShape( QFrame::HLine );
    Line2_2->setFrameShadow( QFrame::Sunken );
    Line2_2->setFrameShape( QFrame::HLine );
    layout42->addWidget( Line2_2 );

    layout39 = new QHBoxLayout( 0, 0, 6, "layout39"); 

    ListBox_Favorite = new QListBox( Widget8, "ListBox_Favorite" );
    layout39->addWidget( ListBox_Favorite );

    layout36 = new QVBoxLayout( 0, 0, 6, "layout36"); 

    ToolButton_FavoriteUp = new QToolButton( Widget8, "ToolButton_FavoriteUp" );
    ToolButton_FavoriteUp->setIconSet( QIconSet( image4 ) );
    layout36->addWidget( ToolButton_FavoriteUp );
    spacer14 = new QSpacerItem( 20, 40, QSizePolicy::Minimum, QSizePolicy::Expanding );
    layout36->addItem( spacer14 );

    ToolButton_FavoriteDown = new QToolButton( Widget8, "ToolButton_FavoriteDown" );
    ToolButton_FavoriteDown->setIconSet( QIconSet( image5 ) );
    layout36->addWidget( ToolButton_FavoriteDown );
    layout39->addLayout( layout36 );

    layout35 = new QVBoxLayout( 0, 0, 6, "layout35"); 

    ToolButton_AddFavorite = new QToolButton( Widget8, "ToolButton_AddFavorite" );
    ToolButton_AddFavorite->setIconSet( QIconSet( image6 ) );
    layout35->addWidget( ToolButton_AddFavorite );
    spacer13 = new QSpacerItem( 20, 20, QSizePolicy::Minimum, QSizePolicy::Expanding );
    layout35->addItem( spacer13 );

    ToolButton_RemoveFavorite = new QToolButton( Widget8, "ToolButton_RemoveFavorite" );
    ToolButton_RemoveFavorite->setIconSet( QIconSet( image7 ) );
    layout35->addWidget( ToolButton_RemoveFavorite );
    layout39->addLayout( layout35 );
    layout42->addLayout( layout39 );
    layout44->addLayout( layout42 );
    Widget8Layout->addLayout( layout44 );
    spacer21 = new QSpacerItem( 20, 133, QSizePolicy::Minimum, QSizePolicy::Expanding );
    Widget8Layout->addItem( spacer21 );
    tabWidget->insertTab( Widget8, QString("") );

    tab_2 = new QWidget( tabWidget, "tab_2" );
    tabLayout_2 = new QVBoxLayout( tab_2, 11, 6, "tabLayout_2"); 

    pixmapLabel1_3 = new QLabel( tab_2, "pixmapLabel1_3" );
    pixmapLabel1_3->setPixmap( image8 );
    pixmapLabel1_3->setScaledContents( FALSE );
    pixmapLabel1_3->setAlignment( int( QLabel::AlignVCenter | QLabel::AlignRight ) );
    tabLayout_2->addWidget( pixmapLabel1_3 );

    layout55 = new QVBoxLayout( 0, 0, 6, "layout55"); 

    TextLabel1_4 = new QLabel( tab_2, "TextLabel1_4" );
    QFont TextLabel1_4_font(  TextLabel1_4->font() );
    TextLabel1_4_font.setBold( TRUE );
    TextLabel1_4->setFont( TextLabel1_4_font ); 
    TextLabel1_4->setTextFormat( QLabel::AutoText );
    layout55->addWidget( TextLabel1_4 );

    Line1_3 = new QFrame( tab_2, "Line1_3" );
    Line1_3->setFrameShape( QFrame::HLine );
    Line1_3->setFrameShadow( QFrame::Sunken );
    Line1_3->setFrameShape( QFrame::HLine );
    layout55->addWidget( Line1_3 );
    tabLayout_2->addLayout( layout55 );

    layout59 = new QHBoxLayout( 0, 0, 6, "layout59"); 

    TextLabel6 = new QLabel( tab_2, "TextLabel6" );
    layout59->addWidget( TextLabel6 );
    spacer22 = new QSpacerItem( 110, 20, QSizePolicy::Expanding, QSizePolicy::Minimum );
    layout59->addItem( spacer22 );

    PixmapLabel_BgColor = new QLabel( tab_2, "PixmapLabel_BgColor" );
    PixmapLabel_BgColor->setMinimumSize( QSize( 50, 24 ) );
    PixmapLabel_BgColor->setPaletteBackgroundColor( QColor( 255, 170, 0 ) );
    PixmapLabel_BgColor->setFrameShape( QLabel::Box );
    PixmapLabel_BgColor->setFrameShadow( QLabel::Raised );
    PixmapLabel_BgColor->setScaledContents( TRUE );
    layout59->addWidget( PixmapLabel_BgColor );

    ToolButton_BgColor = new QToolButton( tab_2, "ToolButton_BgColor" );
    ToolButton_BgColor->setMinimumSize( QSize( 24, 24 ) );
    ToolButton_BgColor->setIconSet( QIconSet( image9 ) );
    layout59->addWidget( ToolButton_BgColor );
    tabLayout_2->addLayout( layout59 );

    layout60 = new QHBoxLayout( 0, 0, 6, "layout60"); 

    TextLabel6_2 = new QLabel( tab_2, "TextLabel6_2" );
    layout60->addWidget( TextLabel6_2 );
    spacer23 = new QSpacerItem( 40, 20, QSizePolicy::Expanding, QSizePolicy::Minimum );
    layout60->addItem( spacer23 );

    PixmapLabel_ShadingColor = new QLabel( tab_2, "PixmapLabel_ShadingColor" );
    PixmapLabel_ShadingColor->setMinimumSize( QSize( 50, 24 ) );
    PixmapLabel_ShadingColor->setPaletteBackgroundColor( QColor( 255, 170, 0 ) );
    PixmapLabel_ShadingColor->setFrameShape( QLabel::Box );
    PixmapLabel_ShadingColor->setFrameShadow( QLabel::Raised );
    PixmapLabel_ShadingColor->setScaledContents( TRUE );
    layout60->addWidget( PixmapLabel_ShadingColor );

    ToolButton_ShadingColor = new QToolButton( tab_2, "ToolButton_ShadingColor" );
    ToolButton_ShadingColor->setMinimumSize( QSize( 24, 24 ) );
    ToolButton_ShadingColor->setIconSet( QIconSet( image9 ) );
    layout60->addWidget( ToolButton_ShadingColor );
    tabLayout_2->addLayout( layout60 );

    layout62 = new QHBoxLayout( 0, 0, 6, "layout62"); 

    TextLabel6_2_2 = new QLabel( tab_2, "TextLabel6_2_2" );
    layout62->addWidget( TextLabel6_2_2 );

    ComboBox_GUIStyle = new QComboBox( FALSE, tab_2, "ComboBox_GUIStyle" );
    layout62->addWidget( ComboBox_GUIStyle );
    tabLayout_2->addLayout( layout62 );

    layout63 = new QHBoxLayout( 0, 0, 6, "layout63"); 

    TextLabel6_2_2_2 = new QLabel( tab_2, "TextLabel6_2_2_2" );
    layout63->addWidget( TextLabel6_2_2_2 );

    SpinBox_FontSize = new QSpinBox( tab_2, "SpinBox_FontSize" );
    SpinBox_FontSize->setMaxValue( 24 );
    SpinBox_FontSize->setMinValue( 8 );
    SpinBox_FontSize->setValue( 12 );
    layout63->addWidget( SpinBox_FontSize );
    tabLayout_2->addLayout( layout63 );

    layout63_2 = new QHBoxLayout( 0, 0, 6, "layout63_2"); 

    TextLabel6_2_2_2_3 = new QLabel( tab_2, "TextLabel6_2_2_2_3" );
    layout63_2->addWidget( TextLabel6_2_2_2_3 );

    SpinBox_HighlightSize = new QSpinBox( tab_2, "SpinBox_HighlightSize" );
    SpinBox_HighlightSize->setMaxValue( 8 );
    SpinBox_HighlightSize->setMinValue( 1 );
    SpinBox_HighlightSize->setValue( 2 );
    layout63_2->addWidget( SpinBox_HighlightSize );
    tabLayout_2->addLayout( layout63_2 );
    spacer25 = new QSpacerItem( 20, 70, QSizePolicy::Minimum, QSizePolicy::Expanding );
    tabLayout_2->addItem( spacer25 );

    layout68 = new QVBoxLayout( 0, 0, 6, "layout68"); 

    TextLabel1_4_2 = new QLabel( tab_2, "TextLabel1_4_2" );
    QFont TextLabel1_4_2_font(  TextLabel1_4_2->font() );
    TextLabel1_4_2_font.setBold( TRUE );
    TextLabel1_4_2->setFont( TextLabel1_4_2_font ); 
    TextLabel1_4_2->setTextFormat( QLabel::AutoText );
    layout68->addWidget( TextLabel1_4_2 );

    Line1_3_2 = new QFrame( tab_2, "Line1_3_2" );
    Line1_3_2->setFrameShape( QFrame::HLine );
    Line1_3_2->setFrameShadow( QFrame::Sunken );
    Line1_3_2->setFrameShape( QFrame::HLine );
    layout68->addWidget( Line1_3_2 );

    layout67 = new QHBoxLayout( 0, 0, 6, "layout67"); 

    layout66 = new QVBoxLayout( 0, 0, 6, "layout66"); 

    CheckBox_SnapGrid = new QCheckBox( tab_2, "CheckBox_SnapGrid" );
    CheckBox_SnapGrid->setEnabled( FALSE );
    layout66->addWidget( CheckBox_SnapGrid );

    CheckBox_ShowHGrid = new QCheckBox( tab_2, "CheckBox_ShowHGrid" );
    layout66->addWidget( CheckBox_ShowHGrid );

    CheckBox_ShowVGrid = new QCheckBox( tab_2, "CheckBox_ShowVGrid" );
    layout66->addWidget( CheckBox_ShowVGrid );
    layout67->addLayout( layout66 );
    spacer24 = new QSpacerItem( 40, 20, QSizePolicy::Expanding, QSizePolicy::Minimum );
    layout67->addItem( spacer24 );

    layout65 = new QVBoxLayout( 0, 0, 6, "layout65"); 

    TextLabel6_2_2_2_2 = new QLabel( tab_2, "TextLabel6_2_2_2_2" );
    TextLabel6_2_2_2_2->setAlignment( int( QLabel::AlignVCenter | QLabel::AlignRight ) );
    layout65->addWidget( TextLabel6_2_2_2_2 );

    LineEdit_GridSize = new QLineEdit( tab_2, "LineEdit_GridSize" );
    LineEdit_GridSize->setReadOnly( FALSE );
    layout65->addWidget( LineEdit_GridSize );

    Slider_GridSize = new QSlider( tab_2, "Slider_GridSize" );
    Slider_GridSize->setMinValue( 1 );
    Slider_GridSize->setMaxValue( 100 );
    Slider_GridSize->setLineStep( 1 );
    Slider_GridSize->setPageStep( 10 );
    Slider_GridSize->setValue( 1 );
    Slider_GridSize->setOrientation( QSlider::Horizontal );
    Slider_GridSize->setTickmarks( QSlider::NoMarks );
    Slider_GridSize->setTickInterval( 10 );
    layout65->addWidget( Slider_GridSize );
    layout67->addLayout( layout65 );
    layout68->addLayout( layout67 );
    tabLayout_2->addLayout( layout68 );
    tabWidget->insertTab( tab_2, QString("") );

    tab_3 = new QWidget( tabWidget, "tab_3" );
    tabLayout_3 = new QVBoxLayout( tab_3, 11, 6, "tabLayout_3"); 

    pixmapLabel1_4 = new QLabel( tab_3, "pixmapLabel1_4" );
    pixmapLabel1_4->setPixmap( image10 );
    pixmapLabel1_4->setScaledContents( FALSE );
    pixmapLabel1_4->setAlignment( int( QLabel::AlignVCenter | QLabel::AlignRight ) );
    tabLayout_3->addWidget( pixmapLabel1_4 );
    spacer28 = new QSpacerItem( 20, 100, QSizePolicy::Minimum, QSizePolicy::Expanding );
    tabLayout_3->addItem( spacer28 );

    layout71 = new QVBoxLayout( 0, 0, 6, "layout71"); 

    TextLabel1_4_2_2_2_2 = new QLabel( tab_3, "TextLabel1_4_2_2_2_2" );
    QFont TextLabel1_4_2_2_2_2_font(  TextLabel1_4_2_2_2_2->font() );
    TextLabel1_4_2_2_2_2_font.setBold( TRUE );
    TextLabel1_4_2_2_2_2->setFont( TextLabel1_4_2_2_2_2_font ); 
    TextLabel1_4_2_2_2_2->setTextFormat( QLabel::AutoText );
    layout71->addWidget( TextLabel1_4_2_2_2_2 );

    Line1_3_2_2_2_2 = new QFrame( tab_3, "Line1_3_2_2_2_2" );
    Line1_3_2_2_2_2->setFrameShape( QFrame::HLine );
    Line1_3_2_2_2_2->setFrameShadow( QFrame::Sunken );
    Line1_3_2_2_2_2->setFrameShape( QFrame::HLine );
    layout71->addWidget( Line1_3_2_2_2_2 );

    CheckBox_TagWinFavouriteOnly = new QCheckBox( tab_3, "CheckBox_TagWinFavouriteOnly" );
    layout71->addWidget( CheckBox_TagWinFavouriteOnly );
    tabLayout_3->addLayout( layout71 );
    spacer27 = new QSpacerItem( 20, 70, QSizePolicy::Minimum, QSizePolicy::Expanding );
    tabLayout_3->addItem( spacer27 );

    layout72 = new QVBoxLayout( 0, 0, 6, "layout72"); 

    TextLabel1_4_2_2_2_2_2 = new QLabel( tab_3, "TextLabel1_4_2_2_2_2_2" );
    QFont TextLabel1_4_2_2_2_2_2_font(  TextLabel1_4_2_2_2_2_2->font() );
    TextLabel1_4_2_2_2_2_2_font.setBold( TRUE );
    TextLabel1_4_2_2_2_2_2->setFont( TextLabel1_4_2_2_2_2_2_font ); 
    TextLabel1_4_2_2_2_2_2->setTextFormat( QLabel::AutoText );
    layout72->addWidget( TextLabel1_4_2_2_2_2_2 );

    Line1_3_2_2_2_2_2 = new QFrame( tab_3, "Line1_3_2_2_2_2_2" );
    Line1_3_2_2_2_2_2->setFrameShape( QFrame::HLine );
    Line1_3_2_2_2_2_2->setFrameShadow( QFrame::Sunken );
    Line1_3_2_2_2_2_2->setFrameShape( QFrame::HLine );
    layout72->addWidget( Line1_3_2_2_2_2_2 );

    CheckBox_SynchTabs = new QCheckBox( tab_3, "CheckBox_SynchTabs" );
    layout72->addWidget( CheckBox_SynchTabs );
    tabLayout_3->addLayout( layout72 );
    spacer33 = new QSpacerItem( 20, 60, QSizePolicy::Minimum, QSizePolicy::Expanding );
    tabLayout_3->addItem( spacer33 );
    tabWidget->insertTab( tab_3, QString("") );

    tab_4 = new QWidget( tabWidget, "tab_4" );
    tabLayout_4 = new QVBoxLayout( tab_4, 11, 6, "tabLayout_4"); 

    pixmapLabel1_5 = new QLabel( tab_4, "pixmapLabel1_5" );
    pixmapLabel1_5->setPixmap( image11 );
    pixmapLabel1_5->setScaledContents( FALSE );
    pixmapLabel1_5->setAlignment( int( QLabel::AlignVCenter | QLabel::AlignRight ) );
    tabLayout_4->addWidget( pixmapLabel1_5 );
    spacer30 = new QSpacerItem( 20, 35, QSizePolicy::Minimum, QSizePolicy::Expanding );
    tabLayout_4->addItem( spacer30 );

    layout38 = new QVBoxLayout( 0, 0, 6, "layout38"); 

    TextLabel1_4_2_2_2_2_2_2 = new QLabel( tab_4, "TextLabel1_4_2_2_2_2_2_2" );
    QFont TextLabel1_4_2_2_2_2_2_2_font(  TextLabel1_4_2_2_2_2_2_2->font() );
    TextLabel1_4_2_2_2_2_2_2_font.setBold( TRUE );
    TextLabel1_4_2_2_2_2_2_2->setFont( TextLabel1_4_2_2_2_2_2_2_font ); 
    TextLabel1_4_2_2_2_2_2_2->setTextFormat( QLabel::AutoText );
    layout38->addWidget( TextLabel1_4_2_2_2_2_2_2 );

    Line1_3_2_2_2_2_2_2 = new QFrame( tab_4, "Line1_3_2_2_2_2_2_2" );
    Line1_3_2_2_2_2_2_2->setFrameShape( QFrame::HLine );
    Line1_3_2_2_2_2_2_2->setFrameShadow( QFrame::Sunken );
    Line1_3_2_2_2_2_2_2->setFrameShape( QFrame::HLine );
    layout38->addWidget( Line1_3_2_2_2_2_2_2 );

    CheckBox_RelaxedEENode = new QCheckBox( tab_4, "CheckBox_RelaxedEENode" );
    CheckBox_RelaxedEENode->setChecked( TRUE );
    layout38->addWidget( CheckBox_RelaxedEENode );

    CheckBox_BackPropagate = new QCheckBox( tab_4, "CheckBox_BackPropagate" );
    CheckBox_BackPropagate->setChecked( TRUE );
    layout38->addWidget( CheckBox_BackPropagate );

    CheckBox_CompressMutable = new QCheckBox( tab_4, "CheckBox_CompressMutable" );
    CheckBox_CompressMutable->setChecked( TRUE );
    layout38->addWidget( CheckBox_CompressMutable );

    CheckBox_IgnoreEdgeBandwidth = new QCheckBox( tab_4, "CheckBox_IgnoreEdgeBandwidth" );
    CheckBox_IgnoreEdgeBandwidth->setChecked( TRUE );
    layout38->addWidget( CheckBox_IgnoreEdgeBandwidth );
    tabLayout_4->addLayout( layout38 );
    spacer31 = new QSpacerItem( 20, 36, QSizePolicy::Minimum, QSizePolicy::Expanding );
    tabLayout_4->addItem( spacer31 );

    layout79 = new QVBoxLayout( 0, 0, 6, "layout79"); 

    TextLabel1_4_2_2_2 = new QLabel( tab_4, "TextLabel1_4_2_2_2" );
    QFont TextLabel1_4_2_2_2_font(  TextLabel1_4_2_2_2->font() );
    TextLabel1_4_2_2_2_font.setBold( TRUE );
    TextLabel1_4_2_2_2->setFont( TextLabel1_4_2_2_2_font ); 
    TextLabel1_4_2_2_2->setTextFormat( QLabel::AutoText );
    layout79->addWidget( TextLabel1_4_2_2_2 );

    Line1_3_2_2_2 = new QFrame( tab_4, "Line1_3_2_2_2" );
    Line1_3_2_2_2->setFrameShape( QFrame::HLine );
    Line1_3_2_2_2->setFrameShadow( QFrame::Sunken );
    Line1_3_2_2_2->setFrameShape( QFrame::HLine );
    layout79->addWidget( Line1_3_2_2_2 );

    CheckBox_AutoPurge = new QCheckBox( tab_4, "CheckBox_AutoPurge" );
    layout79->addWidget( CheckBox_AutoPurge );

    layout76 = new QHBoxLayout( 0, 0, 6, "layout76"); 

    CheckBox_IncPurge = new QCheckBox( tab_4, "CheckBox_IncPurge" );
    QFont CheckBox_IncPurge_font(  CheckBox_IncPurge->font() );
    CheckBox_IncPurge->setFont( CheckBox_IncPurge_font ); 
    layout76->addWidget( CheckBox_IncPurge );

    SpinBox_MaxAge = new QSpinBox( tab_4, "SpinBox_MaxAge" );
    SpinBox_MaxAge->setEnabled( FALSE );
    SpinBox_MaxAge->setMaxValue( 9999999 );
    SpinBox_MaxAge->setMinValue( 10 );
    SpinBox_MaxAge->setLineStep( 100 );
    SpinBox_MaxAge->setValue( 1000 );
    layout76->addWidget( SpinBox_MaxAge );
    layout79->addLayout( layout76 );

    CheckBox_MaxPurge = new QCheckBox( tab_4, "CheckBox_MaxPurge" );
    layout79->addWidget( CheckBox_MaxPurge );

    layout78 = new QHBoxLayout( 0, 0, 6, "layout78"); 

    Slider_MaxInflight = new QSlider( tab_4, "Slider_MaxInflight" );
    Slider_MaxInflight->setEnabled( FALSE );
    Slider_MaxInflight->setMinValue( 1000 );
    Slider_MaxInflight->setMaxValue( 10000000 );
    Slider_MaxInflight->setLineStep( 1000 );
    Slider_MaxInflight->setPageStep( 10000 );
    Slider_MaxInflight->setValue( 1000 );
    Slider_MaxInflight->setOrientation( QSlider::Horizontal );
    Slider_MaxInflight->setTickmarks( QSlider::NoMarks );
    Slider_MaxInflight->setTickInterval( 1000 );
    layout78->addWidget( Slider_MaxInflight );
    spacer29 = new QSpacerItem( 20, 20, QSizePolicy::Expanding, QSizePolicy::Minimum );
    layout78->addItem( spacer29 );

    LineEdit_MaxInflight = new QLineEdit( tab_4, "LineEdit_MaxInflight" );
    LineEdit_MaxInflight->setEnabled( FALSE );
    LineEdit_MaxInflight->setReadOnly( FALSE );
    layout78->addWidget( LineEdit_MaxInflight );
    layout79->addLayout( layout78 );
    tabLayout_4->addLayout( layout79 );
    spacer32 = new QSpacerItem( 20, 35, QSizePolicy::Minimum, QSizePolicy::Expanding );
    tabLayout_4->addItem( spacer32 );
    tabWidget->insertTab( tab_4, QString("") );
    PreferencesDialogLayout->addWidget( tabWidget );
    spacer26 = new QSpacerItem( 20, 42, QSizePolicy::Minimum, QSizePolicy::Expanding );
    PreferencesDialogLayout->addItem( spacer26 );

    Layout1 = new QHBoxLayout( 0, 0, 6, "Layout1"); 
    Horizontal_Spacing2 = new QSpacerItem( 20, 20, QSizePolicy::Expanding, QSizePolicy::Minimum );
    Layout1->addItem( Horizontal_Spacing2 );

    buttonOk = new QPushButton( this, "buttonOk" );
    buttonOk->setMinimumSize( QSize( 75, 0 ) );
    buttonOk->setPixmap( image12 );
    buttonOk->setAutoDefault( TRUE );
    buttonOk->setDefault( TRUE );
    Layout1->addWidget( buttonOk );

    buttonCancel = new QPushButton( this, "buttonCancel" );
    buttonCancel->setMinimumSize( QSize( 75, 0 ) );
    buttonCancel->setPixmap( image13 );
    buttonCancel->setAutoDefault( TRUE );
    Layout1->addWidget( buttonCancel );
    PreferencesDialogLayout->addLayout( Layout1 );
    languageChange();
    resize( QSize(409, 542).expandedTo(minimumSizeHint()) );
    clearWState( WState_Polished );

    // signals and slots connections
    connect( buttonOk, SIGNAL( clicked() ), this, SLOT( accept() ) );
    connect( buttonCancel, SIGNAL( clicked() ), this, SLOT( reject() ) );

    // tab order
    setTabOrder( tabWidget, LineEdit_LogFile );
    setTabOrder( LineEdit_LogFile, LineEdit_ADF );
    setTabOrder( LineEdit_ADF, CheckBox_ValidateADF );
    setTabOrder( CheckBox_ValidateADF, LineEdit_ValidationCmd );
    setTabOrder( LineEdit_ValidationCmd, LineEdit_Relationship );
    setTabOrder( LineEdit_Relationship, ListBox_Favorite );
    setTabOrder( ListBox_Favorite, ComboBox_GUIStyle );
    setTabOrder( ComboBox_GUIStyle, SpinBox_FontSize );
    setTabOrder( SpinBox_FontSize, CheckBox_SnapGrid );
    setTabOrder( CheckBox_SnapGrid, CheckBox_ShowHGrid );
    setTabOrder( CheckBox_ShowHGrid, Slider_GridSize );
    setTabOrder( Slider_GridSize, LineEdit_GridSize );
    setTabOrder( LineEdit_GridSize, CheckBox_TagWinFavouriteOnly );
    setTabOrder( CheckBox_TagWinFavouriteOnly, CheckBox_SynchTabs );
    setTabOrder( CheckBox_SynchTabs, CheckBox_RelaxedEENode );
    setTabOrder( CheckBox_RelaxedEENode, CheckBox_BackPropagate );
    setTabOrder( CheckBox_BackPropagate, CheckBox_CompressMutable );
    setTabOrder( CheckBox_CompressMutable, CheckBox_AutoPurge );
    setTabOrder( CheckBox_AutoPurge, CheckBox_IncPurge );
    setTabOrder( CheckBox_IncPurge, SpinBox_MaxAge );
    setTabOrder( SpinBox_MaxAge, CheckBox_MaxPurge );
    setTabOrder( CheckBox_MaxPurge, Slider_MaxInflight );
    setTabOrder( Slider_MaxInflight, LineEdit_MaxInflight );
    setTabOrder( LineEdit_MaxInflight, buttonOk );
    setTabOrder( buttonOk, buttonCancel );
}

/*
 *  Destroys the object and frees any allocated resources
 */
PreferencesDialog::~PreferencesDialog()
{
    // no need to delete child widgets, Qt does it all for us
}

/*
 *  Sets the strings of the subwidgets using the current
 *  language.
 */
void PreferencesDialog::languageChange()
{
    setCaption( tr( "Dreams Preferences" ) );
    TextLabel_Warn2->setText( tr( "Warning, close file before changing these settings!" ) );
    TextLabel1_3_5->setText( tr( "Log information file:" ) );
    QToolTip::add( LineEdit_LogFile, tr( "Log information file path" ) );
    ToolButton_BrowseLog->setText( QString::null );
    TextLabel1_3_5_2->setText( tr( "Architecture Definition File (ADF):" ) );
    QToolTip::add( LineEdit_ADF, tr( "Specify the ADF used by Dreams to know how to scatter  information on the screen." ) );
    ToolButton_BrowseADF->setText( QString::null );
    TextLabel1_3_5_2_2->setText( tr( "ADF Validation:" ) );
    CheckBox_ValidateADF->setText( tr( "Perform Validation" ) );
    QToolTip::add( CheckBox_ValidateADF, tr( "If set, Dreams will perform a DTD validation of the ADF." ) );
    TextLabel5->setText( tr( "Command line:" ) );
    QToolTip::add( LineEdit_ValidationCmd, tr( "Command line for DTD validation" ) );
    ToolButton_BrowseCmd->setText( QString::null );
    tabWidget->changeTab( tab, tr( "Files" ) );
    TextLabel1->setText( tr( "Relationship tracking TAG:" ) );
    QToolTip::add( LineEdit_Relationship, tr( "Tag used on relationship tracking options." ) );
    ToolButton_AvailableTags->setText( QString::null );
    TextLabel1_2_2->setText( tr( "Favourite TAG List:" ) );
    QToolTip::add( ListBox_Favorite, tr( "List of \"Favorite\" Tags used for Highlighting and Tag Window." ) );
    ToolButton_FavoriteUp->setText( QString::null );
    ToolButton_FavoriteDown->setText( QString::null );
    ToolButton_AddFavorite->setText( QString::null );
    ToolButton_RemoveFavorite->setText( QString::null );
    tabWidget->changeTab( Widget8, tr( "TAGS" ) );
    TextLabel1_4->setText( tr( "Appearence Settings:" ) );
    TextLabel6->setText( tr( "Event Background Color:" ) );
    ToolButton_BgColor->setText( QString::null );
    TextLabel6_2->setText( tr( "Column Shading Color:" ) );
    ToolButton_ShadingColor->setText( QString::null );
    TextLabel6_2_2->setText( tr( "GUI Style:" ) );
    TextLabel6_2_2_2->setText( tr( "Font Size:" ) );
    TextLabel6_2_2_2_3->setText( tr( "HighLight Size:" ) );
    TextLabel1_4_2->setText( tr( "Grid Lines:" ) );
    CheckBox_SnapGrid->setText( tr( "Snap to Grid" ) );
    QToolTip::add( CheckBox_SnapGrid, tr( "Snap to grid when adding annotations (disabled by now)." ) );
    CheckBox_ShowHGrid->setText( tr( "Show Horizontal Grid Lines" ) );
    CheckBox_ShowVGrid->setText( tr( "Show Vertical Grid Lines" ) );
    TextLabel6_2_2_2_2->setText( tr( "Grid Line Gap" ) );
    LineEdit_GridSize->setText( tr( "1" ) );
    tabWidget->changeTab( tab_2, tr( "Look and Feel" ) );
    TextLabel1_4_2_2_2_2->setText( tr( "Tag Window:" ) );
    CheckBox_TagWinFavouriteOnly->setText( tr( "Show only Favourite Tags" ) );
    QToolTip::add( CheckBox_TagWinFavouriteOnly, tr( "Set it if you want to view only a given subset of defined tags on items." ) );
    TextLabel1_4_2_2_2_2_2->setText( tr( "Item Window:" ) );
    CheckBox_SynchTabs->setText( tr( "Synchronize Tabs" ) );
    QToolTip::add( CheckBox_SynchTabs, tr( "If set, Dreams tries to keep syncronized the \"Selected\" item among the different tabs in the Item Window." ) );
    tabWidget->changeTab( tab_3, tr( "GUI Behavior" ) );
    TextLabel1_4_2_2_2_2_2_2->setText( tr( "DRAL Semantics:" ) );
    CheckBox_RelaxedEENode->setText( tr( "Coherence relaxed Enter/Exit Node commands (DRAL 1)" ) );
    QToolTip::add( CheckBox_RelaxedEENode, tr( "Commonly usefull in cutted drl files. In unsure leave set." ) );
    CheckBox_BackPropagate->setText( tr( "Backward Tag Propagation (DRAL 2)" ) );
    QToolTip::add( CheckBox_BackPropagate, tr( "Tag Semantic changed from DRAL 1 to DRAL 2.  For DRAL 2 drl files you can mimic DRAL 1 behavior setting this option. " ) );
    CheckBox_CompressMutable->setText( tr( "Compress Mutable Tags" ) );
    QToolTip::add( CheckBox_CompressMutable, tr( "Tag Semantic changed from DRAL 1 to DRAL 2.  For DRAL 2 drl files you can mimic DRAL 1 behavior setting this option. " ) );
    CheckBox_IgnoreEdgeBandwidth->setText( tr( "Ignore Edge Bandwidth Constrain" ) );
    QToolTip::add( CheckBox_IgnoreEdgeBandwidth, tr( "Tag Semantic changed from DRAL 1 to DRAL 2.  For DRAL 2 drl files you can mimic DRAL 1 behavior setting this option. " ) );
    TextLabel1_4_2_2_2->setText( tr( "Automatic purges:" ) );
    CheckBox_AutoPurge->setText( tr( "Non-deleted items when reaching end of events file" ) );
    CheckBox_IncPurge->setText( tr( "Non-deleted items older than (cycles)" ) );
    QToolTip::add( CheckBox_IncPurge, tr( "Use With Caution! Can lead to lose of information." ) );
    CheckBox_MaxPurge->setText( tr( "Limit Number of Inflight (Live) Items" ) );
    QToolTip::add( CheckBox_MaxPurge, tr( "Use With Caution! Can lead to lose of information." ) );
    LineEdit_MaxInflight->setText( tr( "0" ) );
    tabWidget->changeTab( tab_4, tr( "DRAL" ) );
    buttonOk->setText( QString::null );
    buttonOk->setAccel( QKeySequence( QString::null ) );
    buttonCancel->setText( QString::null );
    buttonCancel->setAccel( QKeySequence( QString::null ) );
}

